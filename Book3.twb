<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.18.1219.1533                               -->
<workbook original-version='18.1' source-build='2018.3.2 (20183.18.1219.1533)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='cars' inline='true' name='federated.0s1grse1csz17d1gsya841yamnk7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cars' name='textscan.16lw3hx1nngv1r1b0zvcv19md334'>
            <connection class='textscan' directory='C:/data science assignments/data visualizayion' filename='cars.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.16lw3hx1nngv1r1b0zvcv19md334' name='cars.csv' table='[cars#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Vehicle Name' ordinal='0' />
            <column datatype='integer' name='Small/Sporty/ Compact/Large Sedan' ordinal='1' />
            <column datatype='integer' name='Sports Car' ordinal='2' />
            <column datatype='integer' name='SUV' ordinal='3' />
            <column datatype='integer' name='Wagon' ordinal='4' />
            <column datatype='integer' name='Minivan' ordinal='5' />
            <column datatype='integer' name='Pickup' ordinal='6' />
            <column datatype='integer' name='AWD' ordinal='7' />
            <column datatype='integer' name='RWD' ordinal='8' />
            <column datatype='integer' name='Retail Price' ordinal='9' />
            <column datatype='integer' name='Dealer Cost' ordinal='10' />
            <column datatype='real' name='Engine Size (l)' ordinal='11' />
            <column datatype='integer' name='Cyl' ordinal='12' />
            <column datatype='integer' name='HP' ordinal='13' />
            <column datatype='integer' name='City MPG' ordinal='14' />
            <column datatype='integer' name='Hwy MPG' ordinal='15' />
            <column datatype='integer' name='Weight' ordinal='16' />
            <column datatype='integer' name='Wheel Base' ordinal='17' />
            <column datatype='string' name='Len' ordinal='18' />
            <column datatype='string' name='Width' ordinal='19' />
            <column datatype='string' name='type' ordinal='20' />
            <column datatype='string' name='country make ' ordinal='21' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vehicle Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Vehicle Name]</local-name>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias>Vehicle Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Small/Sporty/ Compact/Large Sedan</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Small/Sporty/ Compact/Large Sedan]</local-name>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias>Small/Sporty/ Compact/Large Sedan</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sports Car</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sports Car]</local-name>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias>Sports Car</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SUV</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SUV]</local-name>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias>SUV</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wagon</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Wagon]</local-name>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias>Wagon</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Minivan</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Minivan]</local-name>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias>Minivan</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pickup</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pickup]</local-name>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias>Pickup</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AWD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[AWD]</local-name>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias>AWD</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RWD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RWD]</local-name>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias>RWD</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Retail Price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Retail Price]</local-name>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias>Retail Price</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dealer Cost</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Dealer Cost]</local-name>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias>Dealer Cost</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Engine Size (l)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Engine Size (l)]</local-name>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias>Engine Size (l)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cyl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cyl]</local-name>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias>Cyl</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HP]</local-name>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias>HP</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City MPG</remote-name>
            <remote-type>20</remote-type>
            <local-name>[City MPG]</local-name>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias>City MPG</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hwy MPG</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hwy MPG]</local-name>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias>Hwy MPG</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weight</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Weight]</local-name>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias>Weight</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wheel Base</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Wheel Base]</local-name>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias>Wheel Base</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Len</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Len]</local-name>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias>Len</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Width</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Width]</local-name>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias>Width</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country make </remote-name>
            <remote-type>129</remote-type>
            <local-name>[country make ]</local-name>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias>country make </remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[AWD]' role='measure' type='ordinal' />
      <column datatype='integer' name='[City MPG]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Hwy MPG]' role='measure' type='quantitative' />
      <column datatype='string' name='[Len]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Minivan]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Pickup]' role='measure' type='quantitative' />
      <column datatype='integer' name='[RWD]' role='measure' type='quantitative' />
      <column datatype='integer' name='[SUV]' role='measure' type='quantitative' />
      <column datatype='string' name='[Vehicle Name]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Wagon]' role='measure' type='quantitative' />
      <column caption='Country Make' datatype='string' name='[country make ]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[type]' role='dimension' type='nominal' />
      <column-instance column='[City MPG]' derivation='Avg' name='[avg:City MPG:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Hwy MPG]' derivation='Avg' name='[avg:Hwy MPG:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Vehicle Name]' derivation='Count' name='[cnt:Vehicle Name:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Vehicle Name]' derivation='Count' name='[diff:cnt:Vehicle Name:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[country make ]' derivation='None' name='[none:country make :nk]' pivot='key' type='nominal' />
      <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
      <column-instance column='[AWD]' derivation='Sum' name='[sum:AWD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Minivan]' derivation='Sum' name='[sum:Minivan:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pickup]' derivation='Sum' name='[sum:Pickup:qk]' pivot='key' type='quantitative' />
      <column-instance column='[RWD]' derivation='Sum' name='[sum:RWD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SUV]' derivation='Sum' name='[sum:SUV:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Wagon]' derivation='Sum' name='[sum:Wagon:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country Make)' hidden='true' name='[Action (Country Make)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[country make ]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='country make , Len'>
          <field>[country make ]</field>
          <field>[Len]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.31941' measure-ordering='alphabetic' measure-percentage='0.68059' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country make :nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0s1grse1csz17d1gsya841yamnk7].[avg:City MPG:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0s1grse1csz17d1gsya841yamnk7].[sum:Pickup:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0s1grse1csz17d1gsya841yamnk7].[sum:RWD:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0s1grse1csz17d1gsya841yamnk7].[sum:AWD:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0s1grse1csz17d1gsya841yamnk7].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0s1grse1csz17d1gsya841yamnk7].[sum:Wagon:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0s1grse1csz17d1gsya841yamnk7].[cnt:Vehicle Name:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0s1grse1csz17d1gsya841yamnk7].[diff:cnt:Vehicle Name:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0s1grse1csz17d1gsya841yamnk7].[avg:Hwy MPG:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0s1grse1csz17d1gsya841yamnk7].[sum:SUV:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0s1grse1csz17d1gsya841yamnk7].[sum:Minivan:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;AWD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RWD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FWD&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (states.csv)' inline='true' name='federated.1s1of0p16e3nho181zzcr0qqbg3h' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='states.csv' name='excel-direct.08fcl250mcly1h18wa4vc0www4x5'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/LARIS/Documents/states.csv.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.08fcl250mcly1h18wa4vc0www4x5' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:F53:no:A1:F53:0' header='yes' outcome='2'>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='real' name='lat' ordinal='1' />
            <column datatype='real' name='long' ordinal='2' />
            <column datatype='string' name='name' ordinal='3' />
            <column datatype='string' name='type' ordinal='4' />
            <column datatype='string' name='region' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[long]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>long</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F53:no:A1:F53:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/LARIS/Documents/My Tableau Repository/Datasources/Sheet1 (states.csv).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/05/2019 02:32:18 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='51' timestamp-start='2019-03-05 14:32:18.393' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lat</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>long</remote-name>
              <remote-type>5</remote-type>
              <local-name>[long]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>long</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>44</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>name</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>type</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>region</remote-alias>
              <ordinal>5</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.487715' measure-ordering='alphabetic' measure-percentage='0.512285' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='federated.0s1grse1csz17d1gsya841yamnk7'>
      <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
      <column datatype='string' name='[type]' role='dimension' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1s1of0p16e3nho181zzcr0qqbg3h'>
      <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
    </datasource-dependencies>
    <datasource-relationship source='federated.1s1of0p16e3nho181zzcr0qqbg3h' target='federated.0s1grse1csz17d1gsya841yamnk7'>
      <column-mapping>
        <map key='[federated.1s1of0p16e3nho181zzcr0qqbg3h].[none:type:nk]' value='[federated.0s1grse1csz17d1gsya841yamnk7].[none:type:nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='US states and preference on performance' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='type' />
        <param name='target' value='US states and preference on performance' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Country make and their share of AWD, RWD'>
      <table>
        <view>
          <datasources>
            <datasource caption='cars' name='federated.0s1grse1csz17d1gsya841yamnk7' />
          </datasources>
          <datasource-dependencies datasource='federated.0s1grse1csz17d1gsya841yamnk7'>
            <column datatype='integer' name='[City MPG]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Hwy MPG]' role='measure' type='quantitative' />
            <column-instance column='[City MPG]' derivation='Avg' name='[avg:City MPG:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hwy MPG]' derivation='Avg' name='[avg:Hwy MPG:qk]' pivot='key' type='quantitative' />
            <column caption='Country Make' datatype='string' name='[country make ]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country make ]' derivation='None' name='[none:country make :nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0s1grse1csz17d1gsya841yamnk7].[none:country make :nk]'>
            <groupfilter from='&quot;Germany&quot;' function='range' level='[none:country make :nk]' to='&quot;USA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0s1grse1csz17d1gsya841yamnk7].[none:type:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:type:nk]' member='&quot;AWD&quot;' />
              <groupfilter function='member' level='[none:type:nk]' member='&quot;FWD&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0s1grse1csz17d1gsya841yamnk7].[none:country make :nk]</column>
            <column>[federated.0s1grse1csz17d1gsya841yamnk7].[none:type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0s1grse1csz17d1gsya841yamnk7].[none:type:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0s1grse1csz17d1gsya841yamnk7].[avg:City MPG:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0s1grse1csz17d1gsya841yamnk7].[none:type:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0s1grse1csz17d1gsya841yamnk7].[avg:Hwy MPG:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0s1grse1csz17d1gsya841yamnk7].[none:type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0s1grse1csz17d1gsya841yamnk7].[avg:City MPG:qk] + [federated.0s1grse1csz17d1gsya841yamnk7].[avg:Hwy MPG:qk])</rows>
        <cols>([federated.0s1grse1csz17d1gsya841yamnk7].[none:type:nk] / [federated.0s1grse1csz17d1gsya841yamnk7].[none:country make :nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Mpa view of manufacturers'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Make of autombiles</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cars' name='federated.0s1grse1csz17d1gsya841yamnk7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0s1grse1csz17d1gsya841yamnk7'>
            <column caption='Country Make' datatype='string' name='[country make ]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country make ]' derivation='None' name='[none:country make :nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0s1grse1csz17d1gsya841yamnk7].[none:country make :nk]'>
            <groupfilter function='level-members' level='[none:country make :nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0s1grse1csz17d1gsya841yamnk7].[none:country make :nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0s1grse1csz17d1gsya841yamnk7].[none:country make :nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0s1grse1csz17d1gsya841yamnk7].[Latitude (generated)]</rows>
        <cols>[federated.0s1grse1csz17d1gsya841yamnk7].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='US states and preferences'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (states.csv)' name='federated.1s1of0p16e3nho181zzcr0qqbg3h' />
            <datasource caption='cars' name='federated.0s1grse1csz17d1gsya841yamnk7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0s1grse1csz17d1gsya841yamnk7'>
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1s1of0p16e3nho181zzcr0qqbg3h'>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0s1grse1csz17d1gsya841yamnk7].[none:type:nk]'>
            <groupfilter from='&quot;AWD&quot;' function='range' level='[none:type:nk]' to='&quot;RWD&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0s1grse1csz17d1gsya841yamnk7].[none:type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0s1grse1csz17d1gsya841yamnk7].[none:type:nk]' />
              <lod column='[federated.1s1of0p16e3nho181zzcr0qqbg3h].[none:State:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1s1of0p16e3nho181zzcr0qqbg3h].[Latitude (generated)]</rows>
        <cols>[federated.1s1of0p16e3nho181zzcr0qqbg3h].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='countries and share of vehicle types'>
      <table>
        <view>
          <datasources>
            <datasource caption='cars' name='federated.0s1grse1csz17d1gsya841yamnk7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0s1grse1csz17d1gsya841yamnk7'>
            <column datatype='integer' name='[Minivan]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Pickup]' role='measure' type='quantitative' />
            <column datatype='integer' name='[SUV]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Wagon]' role='measure' type='quantitative' />
            <column caption='Country Make' datatype='string' name='[country make ]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country make ]' derivation='None' name='[none:country make :nk]' pivot='key' type='nominal' />
            <column-instance column='[Minivan]' derivation='Sum' name='[sum:Minivan:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pickup]' derivation='Sum' name='[sum:Pickup:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SUV]' derivation='Sum' name='[sum:SUV:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Wagon]' derivation='Sum' name='[sum:Wagon:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0s1grse1csz17d1gsya841yamnk7].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0s1grse1csz17d1gsya841yamnk7].[sum:Pickup:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0s1grse1csz17d1gsya841yamnk7].[sum:SUV:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0s1grse1csz17d1gsya841yamnk7].[sum:Wagon:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0s1grse1csz17d1gsya841yamnk7].[sum:Minivan:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0s1grse1csz17d1gsya841yamnk7].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0s1grse1csz17d1gsya841yamnk7].[sum:Pickup:qk]&quot;</bucket>
              <bucket>&quot;[federated.0s1grse1csz17d1gsya841yamnk7].[sum:SUV:qk]&quot;</bucket>
              <bucket>&quot;[federated.0s1grse1csz17d1gsya841yamnk7].[sum:Wagon:qk]&quot;</bucket>
              <bucket>&quot;[federated.0s1grse1csz17d1gsya841yamnk7].[sum:Minivan:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0s1grse1csz17d1gsya841yamnk7].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0s1grse1csz17d1gsya841yamnk7].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0s1grse1csz17d1gsya841yamnk7].[Multiple Values]</rows>
        <cols>([federated.0s1grse1csz17d1gsya841yamnk7].[none:country make :nk] / [federated.0s1grse1csz17d1gsya841yamnk7].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='minivan mpg'>
      <table>
        <view>
          <datasources>
            <datasource caption='cars' name='federated.0s1grse1csz17d1gsya841yamnk7' />
          </datasources>
          <datasource-dependencies datasource='federated.0s1grse1csz17d1gsya841yamnk7'>
            <column datatype='integer' name='[City MPG]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Hwy MPG]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Minivan]' role='measure' type='quantitative' />
            <column-instance column='[City MPG]' derivation='Avg' name='[avg:City MPG:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hwy MPG]' derivation='Avg' name='[avg:Hwy MPG:qk]' pivot='key' type='quantitative' />
            <column caption='Country Make' datatype='string' name='[country make ]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Minivan]' derivation='None' name='[none:Minivan:qk]' pivot='key' type='quantitative' />
            <column-instance column='[country make ]' derivation='None' name='[none:country make :nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0s1grse1csz17d1gsya841yamnk7].[none:Minivan:qk]' included-values='in-range'>
            <min>0</min>
          </filter>
          <slices>
            <column>[federated.0s1grse1csz17d1gsya841yamnk7].[none:Minivan:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0s1grse1csz17d1gsya841yamnk7].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0s1grse1csz17d1gsya841yamnk7].[avg:Hwy MPG:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0s1grse1csz17d1gsya841yamnk7].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0s1grse1csz17d1gsya841yamnk7].[avg:City MPG:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0s1grse1csz17d1gsya841yamnk7].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0s1grse1csz17d1gsya841yamnk7].[none:country make :nk]</rows>
        <cols>([federated.0s1grse1csz17d1gsya841yamnk7].[avg:Hwy MPG:qk] + [federated.0s1grse1csz17d1gsya841yamnk7].[avg:City MPG:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='pickup mpg'>
      <table>
        <view>
          <datasources>
            <datasource caption='cars' name='federated.0s1grse1csz17d1gsya841yamnk7' />
          </datasources>
          <datasource-dependencies datasource='federated.0s1grse1csz17d1gsya841yamnk7'>
            <column datatype='integer' name='[City MPG]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Hwy MPG]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Pickup]' role='measure' type='quantitative' />
            <column-instance column='[City MPG]' derivation='Avg' name='[avg:City MPG:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hwy MPG]' derivation='Avg' name='[avg:Hwy MPG:qk]' pivot='key' type='quantitative' />
            <column caption='Country Make' datatype='string' name='[country make ]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Pickup]' derivation='None' name='[none:Pickup:qk]' pivot='key' type='quantitative' />
            <column-instance column='[country make ]' derivation='None' name='[none:country make :nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0s1grse1csz17d1gsya841yamnk7].[none:Pickup:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[federated.0s1grse1csz17d1gsya841yamnk7].[none:Pickup:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0s1grse1csz17d1gsya841yamnk7].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0s1grse1csz17d1gsya841yamnk7].[avg:Hwy MPG:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0s1grse1csz17d1gsya841yamnk7].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0s1grse1csz17d1gsya841yamnk7].[avg:City MPG:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0s1grse1csz17d1gsya841yamnk7].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0s1grse1csz17d1gsya841yamnk7].[none:country make :nk]</rows>
        <cols>([federated.0s1grse1csz17d1gsya841yamnk7].[avg:Hwy MPG:qk] + [federated.0s1grse1csz17d1gsya841yamnk7].[avg:City MPG:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='suv mpg'>
      <table>
        <view>
          <datasources>
            <datasource caption='cars' name='federated.0s1grse1csz17d1gsya841yamnk7' />
          </datasources>
          <datasource-dependencies datasource='federated.0s1grse1csz17d1gsya841yamnk7'>
            <column datatype='integer' name='[City MPG]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Hwy MPG]' role='measure' type='quantitative' />
            <column datatype='integer' name='[SUV]' role='measure' type='quantitative' />
            <column-instance column='[City MPG]' derivation='Avg' name='[avg:City MPG:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hwy MPG]' derivation='Avg' name='[avg:Hwy MPG:qk]' pivot='key' type='quantitative' />
            <column caption='Country Make' datatype='string' name='[country make ]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[SUV]' derivation='None' name='[none:SUV:qk]' pivot='key' type='quantitative' />
            <column-instance column='[country make ]' derivation='None' name='[none:country make :nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0s1grse1csz17d1gsya841yamnk7].[none:SUV:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[federated.0s1grse1csz17d1gsya841yamnk7].[none:SUV:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0s1grse1csz17d1gsya841yamnk7].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0s1grse1csz17d1gsya841yamnk7].[avg:City MPG:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0s1grse1csz17d1gsya841yamnk7].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0s1grse1csz17d1gsya841yamnk7].[avg:Hwy MPG:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0s1grse1csz17d1gsya841yamnk7].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0s1grse1csz17d1gsya841yamnk7].[none:country make :nk]</rows>
        <cols>([federated.0s1grse1csz17d1gsya841yamnk7].[avg:Hwy MPG:qk] + [federated.0s1grse1csz17d1gsya841yamnk7].[avg:City MPG:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='wagon mpg'>
      <table>
        <view>
          <datasources>
            <datasource caption='cars' name='federated.0s1grse1csz17d1gsya841yamnk7' />
          </datasources>
          <datasource-dependencies datasource='federated.0s1grse1csz17d1gsya841yamnk7'>
            <column datatype='integer' name='[City MPG]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Hwy MPG]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Wagon]' role='measure' type='quantitative' />
            <column-instance column='[City MPG]' derivation='Avg' name='[avg:City MPG:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hwy MPG]' derivation='Avg' name='[avg:Hwy MPG:qk]' pivot='key' type='quantitative' />
            <column caption='Country Make' datatype='string' name='[country make ]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Wagon]' derivation='None' name='[none:Wagon:qk]' pivot='key' type='quantitative' />
            <column-instance column='[country make ]' derivation='None' name='[none:country make :nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0s1grse1csz17d1gsya841yamnk7].[none:Wagon:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[federated.0s1grse1csz17d1gsya841yamnk7].[none:Wagon:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0s1grse1csz17d1gsya841yamnk7].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0s1grse1csz17d1gsya841yamnk7].[avg:City MPG:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0s1grse1csz17d1gsya841yamnk7].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0s1grse1csz17d1gsya841yamnk7].[avg:Hwy MPG:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0s1grse1csz17d1gsya841yamnk7].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0s1grse1csz17d1gsya841yamnk7].[none:country make :nk]</rows>
        <cols>([federated.0s1grse1csz17d1gsya841yamnk7].[avg:Hwy MPG:qk] + [federated.0s1grse1csz17d1gsya841yamnk7].[avg:City MPG:qk])</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Automobiles mpg for various country manufacturers'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98306' id='13' param='vert' type='layout-flow' w='99028' x='486' y='847'>
            <zone h='4445' id='14' type='title' w='99028' x='486' y='847'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='93861' id='5' param='horz' type='layout-flow' w='99028' x='486' y='5292'>
              <zone h='93861' id='3' type='layout-basic' w='89313' x='486' y='5292'>
                <zone h='46930' id='1' name='Mpa view of manufacturers' w='44658' x='45141' y='5292'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='39028' id='7' name='minivan mpg' w='44655' x='486' y='5292'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='22987' id='9' name='wagon mpg' w='44655' x='486' y='76166'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46931' id='10' name='pickup mpg' w='44658' x='45141' y='52222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='31846' id='11' name='suv mpg' w='44655' x='486' y='44320'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='160' h='93861' id='4' is-fixed='true' param='vert' type='layout-flow' w='9715' x='89799' y='5292'>
                <zone h='15450' id='6' name='Mpa view of manufacturers' pane-specification-id='0' param='[federated.0s1grse1csz17d1gsya841yamnk7].[none:country make :nk]' type='color' w='9715' x='89799' y='5292'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Automobiles types and country of manufacturing'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='1' name='Mpa view of manufacturers' w='41200' x='42000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98000' id='7' name='countries and share of vehicle types' w='41200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='18250' id='6' name='Mpa view of manufacturers' pane-specification-id='0' param='[federated.0s1grse1csz17d1gsya841yamnk7].[none:country make :nk]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13250' id='8' name='countries and share of vehicle types' pane-specification-id='0' param='[federated.0s1grse1csz17d1gsya841yamnk7].[:Measure Names]' type='color' w='16000' x='83200' y='19250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='US states and preference on performance'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='10' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='5250' id='11' type='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92750' id='5' param='horz' type='layout-flow' w='98400' x='800' y='6250'>
              <zone h='92750' id='3' type='layout-basic' w='82400' x='800' y='6250'>
                <zone h='92750' id='1' name='US states and preferences' w='41200' x='42000' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='92750' id='8' name='Country make and their share of AWD, RWD' w='41200' x='800' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='160' h='92750' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='6250'>
                <zone h='8250' id='7' name='US states and preferences' pane-specification-id='0' param='[federated.0s1grse1csz17d1gsya841yamnk7].[none:type:nk]' type='color' w='16000' x='83200' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Mpa view of manufacturers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0s1grse1csz17d1gsya841yamnk7].[none:country make :nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0s1grse1csz17d1gsya841yamnk7].[none:country make :nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{87D7C3D4-8A1B-45ED-9DB8-52987CFA68BD}' />
    </window>
    <window class='dashboard' name='Automobiles types and country of manufacturing'>
      <viewpoints>
        <viewpoint name='Mpa view of manufacturers'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0s1grse1csz17d1gsya841yamnk7].[none:country make :nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='countries and share of vehicle types'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0s1grse1csz17d1gsya841yamnk7].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{42A33F74-3077-4F85-BB58-F58D297D6515}' />
    </window>
    <window class='worksheet' name='countries and share of vehicle types'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0s1grse1csz17d1gsya841yamnk7].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0s1grse1csz17d1gsya841yamnk7].[:Measure Names]</field>
            <field>[federated.0s1grse1csz17d1gsya841yamnk7].[none:Vehicle Name:nk]</field>
            <field>[federated.0s1grse1csz17d1gsya841yamnk7].[none:country make :nk]</field>
            <field>[federated.0s1grse1csz17d1gsya841yamnk7].[sum:AWD:ok]</field>
            <field>[federated.0s1grse1csz17d1gsya841yamnk7].[sum:Minivan:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{61039D2A-1FAE-4759-B2B3-59B394CDEA6D}' />
    </window>
    <window class='worksheet' name='Country make and their share of AWD, RWD'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0s1grse1csz17d1gsya841yamnk7].[none:type:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0s1grse1csz17d1gsya841yamnk7].[none:type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0s1grse1csz17d1gsya841yamnk7].[:Measure Names]</field>
            <field>[federated.0s1grse1csz17d1gsya841yamnk7].[none:SUV:qk]</field>
            <field>[federated.0s1grse1csz17d1gsya841yamnk7].[none:Vehicle Name:nk]</field>
            <field>[federated.0s1grse1csz17d1gsya841yamnk7].[none:country make :nk]</field>
            <field>[federated.0s1grse1csz17d1gsya841yamnk7].[none:type:nk]</field>
            <field>[federated.0s1grse1csz17d1gsya841yamnk7].[sum:AWD:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F7D912EC-C689-4B34-A938-D59FA7B4DAD6}' />
    </window>
    <window class='worksheet' name='minivan mpg'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0s1grse1csz17d1gsya841yamnk7].[none:Minivan:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0s1grse1csz17d1gsya841yamnk7].[none:country make :nk]' type='highlighter' />
            <card pane-specification-id='1' param='[federated.0s1grse1csz17d1gsya841yamnk7].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0s1grse1csz17d1gsya841yamnk7].[:Measure Names]</field>
            <field>[federated.0s1grse1csz17d1gsya841yamnk7].[none:country make :nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C38AEE34-84D8-46B2-B570-1869FB63E7C1}' />
    </window>
    <window class='worksheet' name='wagon mpg'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0s1grse1csz17d1gsya841yamnk7].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0s1grse1csz17d1gsya841yamnk7].[:Measure Names]</field>
            <field>[federated.0s1grse1csz17d1gsya841yamnk7].[none:Wagon:qk]</field>
            <field>[federated.0s1grse1csz17d1gsya841yamnk7].[none:country make :nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CCC64C4A-41FE-4C84-8C20-0777EBD98827}' />
    </window>
    <window class='worksheet' name='pickup mpg'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0s1grse1csz17d1gsya841yamnk7].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0s1grse1csz17d1gsya841yamnk7].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D607C9E7-7CA5-43F1-A389-958A9C02883E}' />
    </window>
    <window class='worksheet' name='suv mpg'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0s1grse1csz17d1gsya841yamnk7].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0s1grse1csz17d1gsya841yamnk7].[:Measure Names]</field>
            <field>[federated.0s1grse1csz17d1gsya841yamnk7].[none:SUV:qk]</field>
            <field>[federated.0s1grse1csz17d1gsya841yamnk7].[none:country make :nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FD7152C6-74C8-492C-B8CA-66490EA47045}' />
    </window>
    <window class='dashboard' name='Automobiles mpg for various country manufacturers'>
      <viewpoints>
        <viewpoint name='Mpa view of manufacturers'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0s1grse1csz17d1gsya841yamnk7].[none:country make :nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='minivan mpg' />
        <viewpoint name='pickup mpg' />
        <viewpoint name='suv mpg' />
        <viewpoint name='wagon mpg' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{CBE32666-457C-4FF4-99F4-B380ACAF42B0}' />
    </window>
    <window class='worksheet' name='US states and preferences'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0s1grse1csz17d1gsya841yamnk7].[none:type:nk]' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0s1grse1csz17d1gsya841yamnk7].[none:type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0s1grse1csz17d1gsya841yamnk7].[none:type:nk]</field>
            <field>[federated.1s1of0p16e3nho181zzcr0qqbg3h].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8BE4D0A5-713D-4CA3-9121-7C31E2721FDB}' />
    </window>
    <window class='dashboard' maximized='true' name='US states and preference on performance'>
      <viewpoints>
        <viewpoint name='Country make and their share of AWD, RWD'>
          <zoom type='entire-view' />
          <highlight field='[federated.0s1grse1csz17d1gsya841yamnk7].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='US states and preferences'>
          <zoom type='entire-view' />
          <highlight field='[federated.0s1grse1csz17d1gsya841yamnk7].[none:type:nk]'>
            <bucket-selection>
              <bucket>&quot;AWD&quot;</bucket>
            </bucket-selection>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{231D25B5-4A53-48C2-9118-347F5A65818B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Automobiles mpg for various country manufacturers' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dWZAcyXnff3X0fU13z425MAAGNzCDa7nk0iTFQ9TSlmVLdoQVcsiWFLYj
      5JCPVzsUdPh4kCw5rLD9YEuWKVEhU5apgzRFUiKpXZG7XO4Su1hcC8xgDsx99fR9VVWmH+bY
      GWCw09dgBuj8PWC3eyq/zKrqf2V++WV+pUkpJQpFk6IfdAMUioNECUDR1CgBKJqapyYAKSWP
      OhtSSvbTBdlv+88y6tqs85gApJR86Tf/K/MZ67GDnVyCyYVUTRV968++Rnnrk+DdG7ewCqv8
      +Ss/qMne3kj+4utfZWxytm5LViHN3dGJBrRpbx5OTGCL/a5F8mdf/SOmZhefeMTc+ASFJhCI
      +egXxbUpooPnuP7GW3zukx9ifGKKwcF+7t8fRU8/5NVxi09/9CoekWFydpnW7n5iZoHbD1fB
      KhOJ+MkUBB+6Mszo3ZuspfMMnRtG2EVuvv02QppcHTmH1+d5v85Mght3RgnHOxjqa+etH97A
      9IUYGT6HjuCt77+OZroRmoEmynT1nyK7PEm+LHF0N5cvnGFy9C6r6Ty+UIyzJwdJLD1kdHye
      gVPDzE+PMz2/TEfPIAFypAo2k7MJPvnXrnHv3j2Ghk4yOzlGuK2D+3fuYkmdy1cuMTk2ytL0
      OIPnr+ByeShm17hxexRvMMKFoV4m5tMM9sW5f3+GaFBnfGaJeEc3x/uPIKXg1jvXKeHi4rnT
      3LzxDhYuLo0MMz01yeDgUe7fv09HxMOdqVWwi5w6e45XvvMtTpy/xNmhfmYXk4yNjtHX38P5
      s2eZGH2P7sEhvKbgtVe/h8vjwvAEKeezDF24TGZxkuVEkpaOPqJGnrH5DE4pz8WrL7A0M8XR
      wUHu379PJKAzMb3C6WG4f+cGyXSenuNnaPVJrt+8R7StnduvfJtY4iIXT54iuZJgYKCX0dEx
      TCSGYTGX0ukKwcJKklMXLrE0O4VeTpMx4pBdxMbg3MhVfI/9wg4Xj/UAb755mxc+8hJWdhGJ
      ZGJyCpCMjT6gf+Aox0+epacjyls37nHt2lVGb79DammaUOcxWs0c4d7zWEvzrKxNM53SuXbt
      Mj94/XtohodzwyNEnBXGlrOMjo1t1fnKq68xfPkqSw/uMDszwVJB58K502gASOZXUly+fJHU
      aoqR82e4efMWU5MznB0ewV9a5v7Dh4zOZrhy5QJTYw8AiLV3MjAwyIm+dt6+PcG1a9e4d/M6
      K7PjvHZznI9++AoAxdVZZtZy3Lo3RigQoC3eQmp2lHsza/zVt79O2/GLtPkF4w/n+e53v8/w
      lat4istMLawwMbMEWIyNTnL75rvEu3sZ7OsG4OHtt9CifVwevsDd66/RdvQs5weivP72fSYm
      pgAYGx0ltTyNr7Wfc0fj3JtNMnj0GCOXLuFxsnz1m6/w0sc/Tn5pirlknpt33sNt6IDDarrE
      1WvnSCznGRnq4PrtSTo6OjEMFz/4/muszU8Q7h7ibG+AOw9XmZpY78HGxkZpP9LDwMAgR3s7
      6ezswnS5eP27r/GdV77H5WvXGBocoH/gGBcvXyYaMpmcnAZgdHSM8ffeYXSxwLULPdweW+Dq
      tUu8/upfcfftN1guebkwGOHegyXOXhjGa+zLb7ah7BCAlJJEJsOD2zfQSllmUyWEEEgpEUKA
      piEcZ9vxIOR6f63pOrqmoWubJjXYGGdKKdE0DQ1JyXLwmDuvTKmQ4d0b7xBq7SR+5CQfv3Sc
      b/zJl0mX1rtgXddB0zCNbeU0DZBYjsClg24YHzCulUi5fn7oJi+++CHc5no7zwwP89a3vkKw
      bYCxd79PihDnT58AIejsO8HJge5tda6ftHDWz1kIByEEQkpe+uRn8Tk5/t/Xv/V++zRto5i2
      fg0dB01bLyelxNmwYxommqZvXDKxdQ4XL79AS8DD1Q9/hG/9398mcuQ0usbOa6K/fwu/8eff
      5vzFYWJhPwCGYazbBZyN++iI9+8fFPmLv3yT4ZFh/F4Xmq5vPHTA0AW2vX7dHCFACoSQaGaA
      lz58BQ2Yn57kxo3bHDs5hCsY48XL59DNCD/+Nz7B9Ve+xuhCZpd7cbgwPv/5z39+65Mo4vK3
      cfbMSU4c72NlNU/QZTEzv0Q42kr3wDHWZu7hmH76OyLcfu8+A8fPEA0H8QYjBD0mvnAUr6kR
      PzKAlltibGKa4SsvEPTqTE5M4W7p5kRvG5qmEY/FMAw3F8+dZGFpFcPlIRb28N79cULxTgaO
      dGz8jtaPRdNpibagGSYrc5Ok80W8kS6Gjg7g5FeYnp1jeS3PmVPHAdA0nVhrG2Gvxp17oxwd
      OktLyI8/2ILPvd43Gy4fmWSCC8PDRCNhHk6OU7Sh+0gPQZ+beDwGaOimm/OnjnLj3ZvowTaG
      jg2QXZ5hcTVJvLUDp5BkfmWN3oFBYi1hWtq6WJq8x8zCCmcvjjB1/xaLaZtrI2fR7TyTM3ME
      wlGOdHXgDUYIeE0Mt5/ezhZu37lPrL0Dj9dPNBxAN73cf+8eH//kxzZ6gPVzi8eioJm0RMPo
      bi/xoIvp2TlC0XY621vxhaP43TqmJ0jI7TA5PYsvGOVIdyeaZhCPtWEVkswtrtLW0cml8ye5
      /vYN8mXB0Mmj3Hr7BsGWDpzcCgvLa8TbO+hojxONxTF0N9GQh3zRIhSJEo2EiMXjSKfEuzfv
      oHlDnDo+gLmp2EOK9qxGgn/4xve5+MKHMAHpWLx74wbFUonWnuMc6+046OY1lMXZSR4uZbk6
      cu6gm/Lc8cwKQKFoBCoQpmhqlAAUTY0SgKKpUQJQNDVKAIqmYHvcRUqxHtfiEQEIIXBse/2/
      joO08iyvZRBCYNs2UkqWlpa2CgshkNv+tv04eP+zEM56IGbDrhDrASvHtteDLArFPlNMz/Hf
      /+fvIyTc+sFf8s1X30YIsXMt0F9+8xvEO2K8N7aA22Xw8qcvMT5l8dbsn9PV2UPZCGIVU8w9
      eI+BkY9w663vc7y/m4ezc5ihNhbGbtLR1Y4R7GX4TB9f/8ofE/YZpFztaKU8R/wm+UiE1HKK
      oSMtLGQskok0L3/2Rw7quiiaiGPdUaaXU5Skm4jXZGFmcmcP4AtFuXDxPO1t7fR2tLIZNG+J
      d3BheARRXg9tnxu5wA9f+QbhjqOMT4xjulwk1hLE2ru4ePE8ViELrK/HOTN0lK7+E8RCfnTD
      w7kLF/G5YTGR5uqVy0SCvqd6ERTNS3vfIFO3XifQur68ZXxifGcP0NvXC5qLwaO9uA0NlytE
      b5dA2DqaZtDb04OQEtMbobWtk7PHu3lIilS+zNH+VryaRDe89HR3ABq9vX34Qm66hR/H1cvq
      5ANuXL9O3+BJOsIm1998k+W19EFcC0WTYXrCdHUF8OkWAwO9LPsSlLPm040EL83M0tJzBDeQ
      XJlnbHKWeEcPR3s7n1YTFIodqKUQiqZGTYMqmppDvl9HoWgMpVJp1++VABRNg8fjeew7NQRS
      NDVKAIqmRglA0dRs+QBSSrLZbMMMCyGwSnncLlcVpdY3YWtaFftINxJuVVNmc+b3aZTR1guB
      pqEZ7j3LCCHWEwhoGsViEd2o5vrtYk+KbYkKni0bprmeaAHeT+Sl65XbcBwHn8+369h/q47N
      /9E0jVAotMshkszaKllLo6s9XlXlq3/wM2jZ6hJK1bKFutoyT6OOR8vosWMEfvZP9izjOA66
      rqNpGuNza/zyF75VQ83PB7/+i5/h2JEYwNZiS8OoPNeKZVnYtv2Bx+w5CySlZGltDUP3MjuV
      QvP5yCZLeIwyuZJNa2sry8srxFujpDJFOlqjaJpGMBisuKEKxUFRQX+iYRWLZAt5Jh6MklhL
      EA7H8QRCxKIxcolFJh68x0pOIxL0kVlbpGAd7lQYCsUme/YAmqZx6sz59Q+nT277y8ZwqauT
      o6fOb327uABtrWGk42B0D2OUj1TXonUnoIrjN/6pugzVjWtqKiPXC2igh7qqKLiO3+Pi0lD1
      5XY2QVbnUx0iG35vff5PJezbWiDHcShkUwT8/orLSCRSCHS98nFeLc6RlAIJVTllQgo02Mq0
      VlGZbQ7trugG2iNO7nYfIJVO4/VVfv12w7EdDLO+HIV129jILmcYtTvSUkqkkOi72HCZxpaz
      vJ1NH8Dn81EqlXZ1hmuMBEtKxTIe75O9a4D8H/wsskonuJlwXfx7eH/kXz3x75PzSX75C197
      ii16NvnPv/RZBjpbaipb81KIRCJBNr1KKNzKWjpFPBYmVxRQyuKNtNEej9RqWqF4atQkgNXF
      eQpWicnxKSLRIt6AwfRMjlSuzJkTR0E8/m4BheIwUpMA4h3dxIHB/qMUslncwSCPjhAdx8Ho
      HsEo91RpfcNxbAL0+PEP/Lvf6+JyvU4wEq3O63nYbfg8tQ1kpJRPwwmufM/vuqMj0KsIdqyn
      E6c6J1hsOMFVlBFiwwmutoxWheOsaQjN9b4TnErjqdcJdpyqgkf7YkPKDSe4dhvrkx17T5C4
      Xe87xHs5wVLKx3sAYZeYnF5gYKB/Kxc9UiKAcqmE1+vFLhYRBgjpwut+coOUE1wdeusQ3p/+
      P1ufJxeUE1wtv/HPPkt/R2UOsaZpjwsgubpCsWyxsjRPOm8Rj4SwS1keTC8TDbnxhuJEdZt7
      iSyDnVGm0yX8pgDDRaZgE3I5GP4YbbFww09OoWg0jwnA6w/gzMyxKCV2uUw5k0CYXoJ+N+FY
      K5oEDRfxqJ+l5SSFskOgPUp+bYmFpEVG5tFDthKA4lCzOfJ/TAD+UAvnL1/d00AIYHuQt6ub
      7S6d4zgYR0Ywyr1VtozqfeCnUeYp1KGHd0bN/V4XV052P+HoCptwKCLBNazyrdGGz11Z9FhK
      SSqV2t8tka7jn8ZtOnsfuMHme7z0Kl6rU1sZuREJrryM2FjaXM1NFGLj3Wi7FNHbz6IH2x77
      3tn2Draw38NnXzhWcX27tsERu0ZPn6qNjXfJVTPp8Ci6pjF8vKNuh34TTdPQdb1yAViFDA8e
      zjEweAKva+eJFNNp9HCYR1e7F1/5laqXQzcL3s/9OvrQZz7wmIVEln/3O689pRYdbvweky/+
      67/VMHvryXKdygUgHIEjBItLSxSzKVpawty5cZ3WI8ewMxlcLW4SSZuOkBtvpI2ersefbgrF
      YWEziXPlQyBdx9AkbinRfB6KwqTzSB/BkI+U5RAIBAgG3YT9viYJYymeZTbTpFQsAI8/xKlT
      Z3Z+ufGU7+17/HjHcXBf+hk8FCpuVK0+AFTnpNVWZt2jrW635pPLGG1De5aPhX38wx8brrzC
      XXiWt0Rux6zTj3kUj8eDbdv76wTroS50owonmA0BVPPDrKXMPjvBRv+H0UwPjuNsOVu14DJ1
      ult326ZaOULU53zupw1d1yqe5dp6WXuDcLvdj78foFakcEimMxi6BhIs26GlJULxlV9tSic4
      8I++g2bW7wMtJnL8+999fp1gj8vgD/7N33mqdW5PbuD1ehuUFkUKMtksuVyWezffQffW99RS
      KBqNlJJisUi5XKZQKGy8qUg0SAC6QSmXpuxoHDt9lmI22RCzCkWj2Hzy5/N5SqUS+XyeYrHY
      mCGQpumcOLnTQV53gv9+dU4wtfkAVBmprKnMxl7lSkpo7sZkxIiHffzcy3U6waK6SYWnaaOe
      LZLV1y+wLGvLjyiXy8A+J8fVgx1oVUSCtY1ZIK2Ki63JjRB5NTdIyvV99NWUEXJ9f3sForEf
      vr5ejZBoGjgbZcyBlypKjrWJaep0xuoT02F2ggHeuDPzgeX6Olroitf/QNl88eOj1CcAKUgk
      05iGxtrKEr5IG3YuRVtPHzpQfPU/NqUT/CQC//hVNH+s4uMXEzn+wxefXye4En7u5RH+5ksn
      9z6wAjYfXpvDISllnT6AlKSzWXLZHLbtIIRDJpNgYXGt7sYqFPvF9pmg+gSg6TiFLEVbYJoG
      5UIaXGEQ5Ua0U6HYFzRNwzRN/H7/zuS4u42R9qJ/cPd9rY7jYA7/DCb5im2tD82rDWrBsxIJ
      FrobsUeuSiHEVj6hlqCHf/DZC5VX+AR7B+0D1JK7aZPTfbGt/J5CiK2ndyU86fe82R7Lst7f
      EyylpFCofMZmL4QQlEolfL4q9wRXneSqtjKw/9mh90yMtUeZXC5HIBCouOyT7B20ABpho5b7
      bNs2LpcLn89HJpPBsqwtWwAul2tndmh/FVnc9mJzGUA1Np9m2vJnoYzjOHXfk8Py44X6NsTU
      YuPR7NDbew9N07Bte39fkCGFQ6lceY4g2ypTtj54iLAd4TgIKbGtMk6F60SEYyOkpFwuVVyX
      bVlYtoNllXFEZV2wbZWxbIdyqYhlVza0LJdL2I7AKpcRUgKSUqlUVbe/HeE4FOspLxxsRyAc
      G9upbR2OEA5CSKxymXIVv4XtOLaFZdnYloVTYzt2uwbVLYeugdnph5SkyfmzpyoKII3df49Y
      Zx8drdGK7KdWFinoLtLLy7gDYQb7985BlFyap+QJszw1Ss/gKWKRveeYk4kVlhJrIMAXinC0
      b++Ev2uJFVZSeUqZBAND52gJ7f0kTyzNs5LOogmdYEsUv2YznU4Raz9KZ7z6odDC3BRZy+TE
      0Sq3pW6Qy6RZyxQoZZPg9nNicKBqG5nkGpmSQ2p5jvaeQdpi1WcMTCUTzC0lcGkS0xfk2MAu
      y4/3YHvPoWnaliD2twdAw+d2UdnzRxIIBFhaWq7Yvs/vx7bKuDxeNCp7Mvj8Aexycb2u5ZWK
      yhSLBTo7O3B7fSArq6dYKNDZ0UYgEKy4Hk03MHTw+PxIIRCOJBDw1zQ5AeD3BVhbWcaucRGl
      1+fHsS0MtwejxtHL5j1av7dLNdkoFYt0dHZgur1oFf6admPTt9reG+xrD9Dd3YWjuSpUmUY0
      GiPWUfmYt2jZuEwP0VY/bn9lWShKtoNLNwnGW/GGKutp/IEAtqPRFovgC1X2BPMHgti2IB5v
      JdBS2Zt1PB4vPb2tOKU8gUiUYj6LWSoTjde2uDAYDjN4bBCzxmUMxUIOt8dLS9CD5q7NGS8W
      C7jdHgIhP201LpL0+QMUbUF7axSXr/6Fltv9iX3NDFcsFuuexWhmMpnME15bpaiE7Znh0un0
      +rTntqFQ/ZFgheIZYbdlEPCcvibVsctPmHmR2Ja9NR/86N+KhSKOXaZUKpFOZxBSkM1mKp75
      eZ4oFou7zx5JSSGfe3xWSEoKxSKObVEqlUilMwgpyWUzFc/QPQ02g2mbgthXH+CguPGD75LW
      Wjh3YgBEmfm5RQZOnibk0/ned/+KfKnItSuXKZZt7GKBUDSKL+Dl9377S1y7PMDoXBqvZ33V
      Zku8jZOnztAaaVyM5Fnga7//W5z71N+mLeglVyiwupbh4tmTFJMzvHpjliOxMLOLExztG6Kt
      PY4nEOYL/+t3+OiL55l5MEEx0IaWLRPv6+TkiZO0tRz8SxN32576/PUAUjCzsMLi3ENuvvUq
      77z9NksrCabmEwgJ+VyGXKHEuz/8Pm+8/j2WE2t881vfxTR1utvCzK8V8RjgGH66YkFkOcvk
      fOUzU88DdnaBgifKg7t3+PIf/il3795neXGGcrmMsMv4gi0kEyt4AmE6Wv185Wuv4DE1BjtD
      TCXKuDQoOW56uiKYRonxsYWDPiXg/Qx3mzNB+54e/UCcYCnI5UuAwLEtTAO+8Y1vc+2lj9He
      GsUqFde7QWEjpIYubSbmElw4c4xcJo+zMc3p8QVwGzAzM0Nb5xG87qffWR6UE2yX8jiGD7uU
      p1wqk08ucH1siY+9OEI4GGJpYQ7TF8Lv1kim0iwmclw8c4JcPo8jHHQhMHwhvC6N2YcPae3q
      OZDr96gTnMvldqRIfz4F8ByhZoHqY7sA8vk8mUwG09wpxH0dAtWblLXZUdevfjavoWEYWw/j
      7cGwfesBFIrDRLFYxOVykc1mdyyQe/6cYIViFzRNwzAMQqHQliNc/44wheIZ49Gl3UoAiqbC
      MAxcrvdfRKgEoGgqNjdpud3u/d8Qo1AcRrbyguq6EoCiOdF1fX0odNANUSgOEiUARVOy+b4B
      JQBFU7KZB0sJQNGUbAbGlAAUTYvaEqloWjRNw+12KwEomhefz6cEoGheVCBM0fQoASiaGiUA
      RVOjBKBoapQAFE2NEoCiqVECUDQ1SgCKpkYJQNHUKAEomholAEVTowSgaGqUABRNjRKAoqlR
      AlA0NUoAiqZGCUDR1CgBKJoaJQBFU6MEoGhqlAAUTY0SgKKp2fHOyDdffxXN5efM+RPcv7NC
      wFmClhakv5vc3CjnL19h/Ic/YNUwWZh6SEfER+fpF7jz1iu0BIMMnLnEg1vXMSjSP/xpemPu
      gzovhaIitvUAkq6uLsr5NIlMllLRolwsEj5ygqWJmxRtgamBVRKcGRmhJRLmyrnjrCRzxDqO
      cPXKaabu3sQXG+REXztloV4+qTj87BgCWWULw3TjcbfgWIss5cp4TZPWoEnvsbMAtLS14gY6
      OzvRvSHiYS9zUw+4fvMhIy++CIVZbr03rt5xq3gmqPs9wVLYjE1Oc2LwKFJYvPv2O+TKkqsv
      XMOlPAzFIaFUKuHxeB77Xr0oW9EUPEkA6hmtaGqUABRNjRKAoqlRAlA0NUoAiqZGCUDR1Gwt
      hZBSks1mG2ZYSolt27hcrrpsAHUH1YQQ6Hp9Wj8IG5Zl1XX9GtGGSpBSrr9wrsF2622rEAKf
      z4fb7UZKSalUeuyYiuIA5WKekgOhgL/iyh3HYe1Lv4A3P1Ndq58j9JY+/D/1W1ufbdvGNM0P
      KLGT22Mz/KcvX29soySwH0H6Btr1uk3+yz9/uerr9SiWZWHbNj6f74nH7GldSsnUwyncvgil
      bBLN4yOXLmBqZQplh2gsRiKRpDUWZi2dpy0eQ9PA6/UicivI7HzNJ/CsI13eusrbjmA5mW9Q
      a54dfJ7af/TVUkH/st69pZJJ7r13l4WlWTTNC7oLj8dDcmGaidFbTK0WcbsMEsuzpLOPdzUK
      xWFkT6lpms5A/1HKDhjH+kE3cLvcQAQA2dFOa3c/Xn8QQ4fFOZu2tihIgR5sRzOs2lsnN/6p
      d2GdPBgbWrCzripNU6cjGqjLxrOI1/30eoB9WwvkOA7FYpFAoPYbKKVECIFhGHW1pd6x5EHZ
      yGQyhEKhuuqstw2VIKXEcZyG2z0UPsDuSGx77xMu/MkvIutxgjelWa9z1QgHbZ9suM78BJ4P
      /9NdD3+4mOLX/9t36qy0gkYcWrt72wz4XPzGL/1YVVaFY1EsC/w+T60CgOWlZcrFHOGWOKvJ
      JPGWIAVbQxYzeEJxouEAIreKzC7UWkVTIEvpJ/7NdgQrqeZzgquhWK5s12E5l+K9sSlMX4jj
      vTHW0g751FJtAshlUhTLeabHJ/AE0sRibiZmsqTTeU4c7aVcyEG4+cauisNLIbmE44ljZiaY
      W4FU2ia5slybAAzDRU/vAK3xdpxSCenx0ucycKSGx/1+4EYPdaAZdp1NP8TjlwbY0HzRJx7t
      MnU6Y8E669y7DYfXbgVDIG/lgcLk2gpGocTpXpOUJtBESTnBh9mGcoIb5wSnZse4s+hw4fQA
      Po+B7YAu7ccFIIVDIpkmFo0+Nuu32SBh20gdhNRxGbuHEhzHYe1//1xTR4KrRY8N4v/J/7H1
      +fbYDL/2hz88wBY9e/zbn/8ER9rCwE4BCMfGkRouc+fD9DF5JRZmmUsV0TVBOm8RDwexS1nu
      Ty0SDbnwh9sIiTJTuTw9rTHSuTJBNwjNpFB28GgWrkCMSNCLyCeQ2cWnc+bPAdIb2fHZdgSr
      6cIBtebZxBZi1+91w9w16vuYAAItUfSFu0zNaxjYlNIJHHRawn58fj+asEADXYOFxRVsR0DQ
      TzE9z1JeEtJKOJ4sw+eGGn1uCkXDeUwAbo+P3hNnCHjdFC2BjoNmuHBsC4/Xi8a6W3JaA9uy
      sRyB1+MG2U13sYyhSQzX+uZjPdSJZjr1tbAhvuezEU3WQl07PrtMna54Y53gRpzG07Jbi01X
      lf7ivjrB+eUJAp76lkM3Ypmt4zh1O9KNsCGCXZiuyrPlJdaSFJ366nyURpzHrnaFg6E31m40
      6MHnrT27YEMjwY5VZGJyhr6jx3CbO2VZzufR/H4e/akXvvIvIDtRVaOfZ7y/8G1wtVd8/PRS
      ml/+wmv72KLDza/+k08y1Ne2r3VULIByLkvedlhNrFLKZwmFgjx8cJ9IWzepxWXC3THSaYuQ
      S+KNtNLVFtvPdisUDaFiAehuDy5RpJjNYdtFknk3pbJNuVzCcLkpFAqYpodI7MmBHYXioLAs
      C8d53B+tWAAef4jTZy/u+O5Yb/cTj3ccB9fxT+JyklU0cydyYzl0/VsiJbp+8DY0s7oNMiG/
      h89cPVZXnY8ipUDTGr0VfN1Xa7TdUODxTG61omnarr7k/jrBSxMEvLVH8p41J1gLtKK5nzxr
      U21kM7GWpGA39kflCIHR4L27jbCraRrdrTuj3od4OfROpBTkcgV0HZAatmMTCAQofLW5nGDv
      j/0KrlMvN8xeMznBXrfJlz7/U0+93sY8CoRDIrlGKpXi7rvXsTT1YgzFs0FjBKAb5JIJciWL
      I/0DFDJPXuOuUBwmGjIE0jSd0+cu7Phu3Qn+VH1OMIBsgBMsJfpTsKG39NVVx6OE/R5+9FqD
      nWAh0ep05vfDbrUR3Eaxz07wOP56UlxsOMFavQmpHAe93ihug2yYkS40d2VLxFf3wwner0jw
      PtjdbjMS8BLyVze03n8nWAoyuTyGppFMLOMOxsHKE23rAKDw1X/ZVE5wJXg/92u4hn60omNn
      msgJ3ouf/9wIP/6Rkw23W9/jRUpW15Kk0inS6QxSCtJrSyytZhrUPIVif6mvB9A0ipk1LE8I
      n89LKrFAOi8Q7iREK0+jqFDsN8ViEct6PEdVnQLQOXXm/K5/chwH14lP4XJSNZt/3iLBQkj0
      SG/Fx4cDHj577XhddT7KsxQJ3t7Wgc6Wumx5vV683scj8VtOcKOzQwshKJVKHzCmERcAAAVi
      SURBVOiA7EWjIsHPanbofD6P39/YnrSZskPbto3X663MCdY0raEbsDc3Sde7Kb6ZBQA0fFN8
      Mwlgcxbog3h6SRhrQNO0hrxwuxE35rDYOIxtaNR9epSncb32VQDz05NkbZ2L507XtKvx/t1b
      hFq7a95bkM+kWEikMewCOcfgzFD1QaVcJsnSWhZZyuIOxujpqnxDyyapxDKTM4v4vSZC93Dy
      +NGKypVzaW6Mj9E9cIq2SO1DyU1kOclbN2c4d/40Pndj5uxTiWUyRUE+tYzhi3BsoHIf50kU
      cxlml9YwZQnpDjLQ07V3oRrZV4nZUica9FNbpE3i8bhZW1uruX5/KILPbaK5vPg9td3wQKgF
      r8vA43GTqLEtum7QdeQIbq8fj6vyR0G5aNPV00Ux35h0846j43VZpBqYvj7cEsfUBZ5AGEPb
      PSNDtXgDIfxeV933vxL2tQdob42St42aVeb3Bwh4ah8DZ1MJUuksHW1RLFnbqWbWVkhlcsQj
      Qdp9ta1Pt6wS6UyJeMSPo1f+JA/EIqwlUhzp7aip3kfRXV4CgQjxSH0v7tjO2soi6VyJeMiD
      4YvsXaAC8uk1Uqk0rfEo7W37m2LzUGeGa3b2IzNcM1HJUoiD98oUigNECUDR1BzqadBaufXm
      qyT1OCOnB9GkQyKxRltnFx4XvPXmDYqlHJdGLmE7Asey8Pr9mC74/S/8EddG+rg/n8axbeKx
      KOhuzl24QCxU/yzMs8Qff/E3ufry3yXud1Mul0ll8/R2d2Jll/mL124x2NfHWmaJ/p5jRKNB
      dNPD737x9/jo1VM8nJgmIb20+8Jofjfnzp0nHj6cS2OeQwFIxqfnycsETmKCYllgeoJk8XOq
      N8Ls1BgZW8cpvMJqukBbayuLa3k+99c/QYvfYHo1h+5YCNMP5SLBFjdT88vEQo1d63+YEaUk
      6bLDjTd/wOrCMvHuTty6oLe7k1J6mXj/KZLL46TsAqZI8eU/fYOf/MmXafdrTCTKmFYJYUYQ
      TpHWWJDxBwvERwYP+rR25fkTgBR85GOfQQobq1zA6/XwR1/+Cn3HT1K2W3jpE5/CcRykXcIW
      Oj6fC31sFp/p5sOf+DiWcACNUDSOzxTcvn2X/iONmYV5VrAtwU/89C9QyiTIZrOI3CrfuzPH
      6uoqsa5TRFN3cPcPMuTXSWUK9PV149F1XvyRH6Vs2ZiDfbijXYTdklu3bnHixJOzhxw0ahbo
      EKNmgepDzQIpFHuwbz3Aptn9WCPSLMgG7IduZir5De6bABSKZwE1BFI0NUoAiqZGCUDR1CgB
      KJoaJQBFU6MEoGhqlAAUTY0SgKKpUQJQNDVKAIqmRglA0dQoASiaGiUARVOjBKBoapQAFE2N
      EoCiqVECUDQ1SgCKpub9tChScuv2bboiPiaz4JMlujtijE1M4w+3EtSLLKzlcPtCBI0SiXSB
      9p5BFiZv43J5aOka5FhvB2+89iqaJsnZHnRd43hrgKl0GV0zONPfys2xGdBdfOSFSwd42grF
      Ou/3AJpGNpViKpGFfJJUKkUmlUKiMTE+xsPFFa5dGaGQTrK0muHqtavMTY4iDRfDI5dYWZwG
      wNZdXDw9gNvfhtuwyaczDF24hFPMcOP+OC9+6Bq6XT6o81UodrBjCHR2sJ2VHIS8OsFoB5lM
      BsMwCIVCRANe3rr+Dum8RSTo4c0336S1u59AIICmaQQ23mUVCATQDDdBv4dAIIAUFjff/iG6
      J8jxIx289sabLKzU/vZ4haKRVJwVYnpylIWlBMF4N6ePVf4WkId33iV8/AItblhbnuPB1BzS
      9HF1+GzNjVYoGoVKi6JoatQskKKpUQJQNDX/HwVMjN5dduuoAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Automobiles types and country of manufacturing' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Country make and their share of AWD, RWD' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Mpa view of manufacturers' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='US states and preference on performance' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29WYwc15rn94slI3LPyto37rtEUlxEUrqLrpbpO93o7sHcbhttG7aBAXoM
      wzZgYGBgHtowGsaMMX7zg/3iHj+MZ9zLwG63Z7rndt8eLVfL1ZV0KYmLuIpVrH2vrNwzIjIi
      /JA8UZFRmckqskhVseIPCCpGxnIy8nznfOv/k1zXdQkRYo9C/q4HECLEd4lQAELsaYQCEGJP
      IxSAEHsaGwTg089+CYC5OsGXd+e5983XfP7Fr/j0V1+3vMHDsbGWx8fHWx9/Elx99wPWtnjN
      u3/9b7k7NrltY9hujN+4yvu/+Ixq/bseyd6GGjywurICgGOWyZVcHk6M8ZPf+R0k3zl3v7lG
      sWKw/+Bh3n33Xc7lcrx85jQ3v76GWbe5cOEc7777LufP5zh55jwTd74iX3G5dOVVHt65wVqp
      xoGjp+jLJimszHN3bBpZi3PxleN88uEnRONRugcPs683ytWvbzE+PsWRR8/+5tpVTEdC1pK8
      8vJ+7t2a5Mb9+/z23/k+X964S7qnn6EundsPphg9/grzU2NMzi6y78hLVHPzRFSbqVWXkYzM
      3FKOE2cvsjR5l2rNomLLvP7qOb69fYNcqcqpsxd5eOtLipbC5UsXUCSolXJc++YesXQ3Z08d
      ahrvodE+6qUlPv56DF22OX3hMnZxgbvjM/QPHyArl1mtR7j/YJzZ29c5eeV1qNf4/Oo1iMS4
      dOEs9+/dY+r+DY6cOs/cSh7HMuhKxSgYLq+/eo7rX35OuVbn1CuvsvDwNlXTxnBVrlw4y71v
      rpEvG7x8/hLfXv+Ciqtx5dVzTb9diGY8VgV6+weXee+99/jl1eveses3vuHYS2fo6+3hyOHD
      XLx4kWhEY3iwF6k8x6d3ljhypHHcmrvBqtTPxZcH+fkn17l2/SZHTr5Mb1cCgFS2j1RM48vP
      P8OkznLe4OKrV3hw+wbvvfch5y9d5tihfd6zx6fmOX/+AqXpb1mzavzF//NXvPnWW7z3wcdc
      vHKFhW/vEO0d5tDBg5w4vJ9fXbvF5Suv8fUXnzB++xq3Z0u8du4AN+7N8tprl/jlhx9w//44
      Z86dp55fobA2ydiKy6VLlyk//IJq8iDnDqf56It7AHzw4ae8evkK0uoEs0WjabwA9dISdb2P
      1y6f56Off8jHn33FlcuXuXPjS9bmxnn/s9u89cYP2H/wEOcvXuRXH3/AyXOvcqJX4pe3Znn3
      3/0Fh86/CblxUiMn6HJKZI+cobI4Qw0YHh4molp8/Iur3H/wkLPnLlBYW6SycI/pSoxLly+x
      9M1HSP0neHlQ5ZPrU9s4XV48bBQA18UFVlbydHeniWf6eefttynNTFB5dMrf/8lPmLr3Fb+4
      ehvHdXCBpQdXuZ9TuPjKaRzbwXEaxx3H5sHdW9y4t8Dxo8P8vZ/8DvPj3/DR5w2V6r2f/ZTB
      Q8c5un8YB1AVBQBJlrFdCUWWcFzHG54kNdYzBwlVhtMXLtOTjmNUinx19SrJnj4kX2RjeWGa
      q1evMnLgKKhx3vj+JWQJZifHufrlNQ4fP4GkKMiShCzL3rMBHNvm/u2b3JrIc+xgb9NrEmPy
      j9cboyzj2BaKqlPMLXL16lX6hhpC/PoP30BTWr32xv32HzvN4eGexo8jy0iS4o3LLkzz8fUZ
      Llw4jyY5yIqKLIEsS4/Of/RuHJu7t65zb8Hg6HCqxc8eQkD5wz/8wz/0Hxjp6+LL699QkVNc
      PHmA8fu3GJuYJju8n5HeLAC3b3xNxYDjp04x0pPg2jf3GD1yiqXJ+xRqJgODIxwf7ebLG7cZ
      OXaeqL1G3YHunn6mx+5QrtU5euIlElGNdFzj/thDXFnnwP5RZGR6ehrPOX3yIL/68ga2q7D/
      4D5U4Oa1q1RqNbqGDjLc2wWo9PRkOLh/hLmFZWRVZ3RkEAno6emhv6eLQrlGPJGit7uLbE8P
      sqSRTetUDYtkuotsJkVPT2PSdQ8dRCot8ODhBCOnLqPWlrBd6OkbJBHVGB3q5auvrhPJDnN0
      pBd8481mu6iXlvjwy/vUa2Ve+95rHBjuYzlXRI/GGezrIZrKktAaEzrb08PB/aNc/+orVowI
      V84ehUfjBrxzE5ksmgw9Q/soLU2ztFZmcHCA7mzGO7d/9ChmbpqxiUkOvfI6Tn4BB+jpHyau
      R57dDNrlkHZbJPjTX37G669d+a6H0Rbm6gQ3l3QunBj8rocSYhPYdQIQIsR2IowDhNjTCAUg
      xJ5GKAAh9jRCAQixp/GdCUC+kH+i68r5AsHsgXy+8NyeDzA/Pc5KvvzE1+82tHrn7bA4O8FS
      rvhMx7OdaBKAifs3+eTTz7h1b3xTF9+49c0TP/jWrZtPdN3EzVuUxPO/uQXAzVu3WpxZZ2kp
      1/Y+ra/ZDOrcujdBdzoOwLXPf8HPfv4JUOeDDz6iMH2T//3P/hqntsLHn9/iT/7Vv+Dzzz7l
      6vU7T/i8Bj54912gkRe1Ul7kr/7mfT7/7AtqdvN5EzfW30+nY1uB/50/DjfuPqC3K/kUT3u+
      aMoFGptZ5q033wTgi1/8HFeNIutprOoqr792kfffv0plbZ6B4W6IDHPzm6uoWoLJe9fJ9O2n
      lF/mrXd+xMcffs6PfvR9/uan/5beTJRvF1wiisVvvv09btx5wFrZJKHDxL2bVJQMyxN3UBQY
      PH6Fw0Np7t26zvTEQ15+4wd88Ocfkkq4vPZrP+KXn3yJsbjC8Pdfo5hb4urVq2SyfSzOTvDZ
      +6skjl5m7sbnIElceedNHnw7xq8+myA7fJTXLpzl848+QIonOXbiDPPT43z0s0UGz/0a1vxt
      Jh7O88YPXuaP//Ybfv2Hr/DN1zeRgB/+3V+H/BQfffUQzCpnzh1lbOwhr1y8RE8mQdF0iLo2
      NiqS5HBnssCpfWke3LrLkZevYBQXuXzldd5//+fAyW350WQ1iuxYJLv7iCrglOb58/euc/bM
      Kabu3OShafDK4QN8OzZGsWrhzE3x0DTYl9KYWSnhOBKyVSCezHDizAWSusKdm18x+XCKS29c
      5qc//YqEYvLOb/6QD3++/s5hjT/7Pz+gt0/h5VfP8dOf/oq337nCvWtfgyRx4pWzjI09YF9v
      lqm1GjgOUbmGrMbpSsVZLtYazzZyJLv6yBVrdMclTFT2DWS5dn8OcBhMyRhSnCPHTjxzYWra
      AVQcTLsRFjDqMpcvX6ZWXPY+d91GZPHVK+epV22OHj3KqaMHSWb7ee3SOV5/5TD/95/8OYfO
      XgQgme3l4oUz9PePMtTfxcTEQ2zXZTWXwzbK3HkwxeDgAAtLi+jJNI5RASzGxyeR60VWiiYH
      Dh/npQODrMxPMnTyVU4cOQA0coiOHj3K/uE++ocPcOX8S+Rziyyu1EinY1SqFgDpniFeu3AW
      gJfOvIxtVpmZWWBw9BCXzh6jkF9hfHKFenGVogkvnbnIvozEQqFOOqlRrdmszc5y9NxljvTH
      kDPDHDlyjJ5MAqs0z/R8DoxVrn+7REyWKDkSx3t0fjFdZSihPHpxNo0Ek6f4oSQJ2wVLhoia
      4Nd/48eouW95mKsjJfo5tb+bqckphob3cfbCeeamxnAcWMnlvGMLc7NoERVVUTjz8suY1QIz
      C2vgVhkfm4PaCvkKHDp6imNDA+SWm985wIEjx7l4ah8LuQonXzrHgf6o9861RC+HjxzGKBVQ
      tQiqqoAa57XXX2dtZdF7diSW5PyFC8Q1l6JR5/KlSzj5JeqqhqaqHH/pDNgmUzMzT/XONoOm
      VIjR4X6+/PIrChWLfQNdfHP3HkdPvULEMRifnKVnYIjebIZ0JgOoZOIysytFeru7yGTSaIks
      97+9z2vnz3gPyKQzIGt0ZeL0dqVZKVTo6ellZGSECxfOMz0xyf6RQSq1OkMjI8SjOqVCDi2R
      YWhkPwlNI52Jkxk9xvL9rylbsO9AIy2isrZMxVHJJBNkMmnQsvSnXOpShJHhETRFIZ1JNcYA
      LC3MU64YjBw8TDyqkklnkKNp3OoaiUyWkf370LQoma5eNKeEq+gMj4zQPTDExK0vqcd6vPSH
      bDbDysIKZy5f5uixk9TySxzZ30fJiXPs+GEquSL79g2zNDfB7PwSZy5c4utP3iUxcJBYZOum
      11B/li+/ukaid5ChtMbVL69jKGlOHhrGqRWZXlgh29PL0WMj3PjqNsPDgxTKVXp6+jhxcj83
      vrrNKxfOsji/RCbbg2NVqBgOBw8fIhqJUMyvEE11MTx6gKimkUlFye4/yuJd/zuv8ckHv8LN
      9HH+xH6QdTJdWXTF8N55RJU4ceoUi3NzJDNZBvp76EpnGBrsY26u8ey+nuyjOQT7Bnu5cfsu
      g0dPU19bRE9miCkOxXKFoZGDpBLRp5nfj8W2RoKXZh9SJcn+4d7Hn7wHUSqVSCZ3j368ETWm
      J4uM7u/7rgeybQhTIULsaTTtxSvzjdTh1UKFXK7hQVmancVyIZ9fo1rMcfXqVRZXt+52DBFi
      J6LJC3T99l3efPMtfvY3P+NAT4LaS9/jxi9/St/Zv09p7hb74iY9R95m/vb7lI9e5lDfbt7O
      dxcqlQrKo9qDvQbXddfrQBwHwzCQZblRc+L7TECWZTRNwzRNHGe9lkRVVRzHabquSQX693/9
      b3DQSPUNc+WlIT6+NoXqOuBYOK7NaMyAI+9wMLPGhz9/yBtvnntOryCEYRjouv5dD2NHoFQq
      YZomruu2FQBJktA0jVqthpji0qOiJ78ANKlAip7gje9dZHlxGSnWx/y1nzNw4jRWeRYlLvLb
      XW5+cY39Lx99Ll82xN6BbdsYhkG93jnu7LouiqIQjUbRdR1JkvCbso7jUK/XsSwLTdOarhU7
      ghCGph0gl8uRzWYp51cg2sXa8jzDIyPkFmeIdg0hG3m+uTfGvkPH6O9Ob+d3D/EY7IUdYG1t
      Ddu2kSSJbDa7YWX3w3Vd6vU6tVqNer3epOpAY4Lruo4sy1QqFe9Y8JzQC7RLsBcEwDAMKpUK
      juOgKAqaphGPx1uea5om5XLZW/mFSuM4DpIkkUgk0HWdSqXiqUv+ncJ1XWRZDrNBQzx/uK6L
      bdsbjquqSjweR5ZlbNvGNE0MwwBo+luc67+f+L8QHMdxWFtbo16vo2kaiqI0qUlCGEIBCPFc
      Yds2xWKR1dXVDbq+0MuFEes4DuVyGdu2sW2bcrnsqTOyLBOLxTzPmF+9iUQinvFr2za1Wm2D
      iiQQCkCI54Z6vU6xWPR0dsuymj53HIdisdhysooJXqvVWFtbw3VdNE2jXq97K7ssy0QikaZj
      0NgZhOcnqPG/kAIwNzeHC9hmhdv3Nk/RODU9jVFa8/LZn6ZmIMRGyLJMOp0mk2nQuUSjzXk+
      qqqSTCaJx+MkEgkikQadi2maaJpGJBJZ998/2i0ymYz3ma7rRKNRT78Xu4PYUWCjIbyBGnE3
      4P/9sz/h0KlX6OlOU8gt4kTSSLVVuoePMdyfZX5+nqGhIT755DNe/d73uX3jKyLxOIl4hnJp
      jbWiwYPbX3H63KvYtRpdfQNkh0b567/8Ky7/8FUqK1UeqAoVx+HQyAhGeY1Y9zAHhvu/66++
      K+G6LuVymUQigWEY1Go1TNOkp6dnQ3DP77bUNI1cLodhGMRiMaDFBFZV0ulmj2QqlcK2barV
      aktbo0mItutLPk/09fcx0BXhoy9uMTX5kNnZCd7/2bss50u4VhHURoQ6GYtw594Y0zMzTE/c
      5/NffMz0Yo56tUJfXy/T80uceeUU73/4KcmIxLFDvTycLVJefsi7f/tTZlfKjE3O8NH7P2Nh
      OdwNngZCny+XyziOQzqdbpr8IkIrUCwWKZfLxGIxb/LHYjHPu1Or1TaoUACWZZHL5ajVap7h
      KyZ70GOUTqd3rxu0mFtkzZChXmHf6H7v+Nz4fZKjR0lFNkcJa5bzTC2XOHJg5FkNdVuwW92g
      9Xrd89hYlkWhUMB1XXRdJ5Vap220bZtKpeIdE+7M4IpfrVapVqsARKNR4vE4lmVhGAaJRALb
      tr1nxONxqtWqN/kdx/FoJgG6urqeXgDW1j4lGjWf5hbPFdHoj77rIWwalUrF84PvJgEQ+TqS
      JFGtVonH4+i6juu6VKtVL1fHPxmhEQhLJpNNLs4g/Aat8BiZpkmpVCKVShGJRMjn81iWRSQS
      QVVVDMPAdV0ikYinEmmaRiKReHobwLJW0LTa094GgGLRIBJRUHBw1AhWqcZKyWb/aHLHUXwX
      15ZZKZoM9nV7Iffl+VnS/cOkYtszUVvpr7sB5XIZ0zSRJAlFUTxjVpKktoEtgHg83tZd6Ye4
      r4CmaaRSKVRVxbIsTzCE+1Rc499VEokGO/nOsQFch3t3chRzFaaWqyyMLfNw2WKwW2VmvvL4
      658zVldWkWSZpcVZ7tx5wNLyErIWZWF6b9ORm6aJaTY0ApGuAA1VKCjQQbekpmkbcneC5xcK
      BdbW1iiXy01xBFVVMU2TYrGIZVkt3Z62bXsu0lKphG3bO0cAcvNFIjGJqiORW7ZYLtbpjcHk
      dAld33nOKj2e4sDIIKWVZfoGeqg6MkvzM1jujnmlzx1Cjwc2BKha5euImIAflmV5k9YwDAzD
      2GAgQyMeUKlUvEBXqVTybANgner+0fP9sQKRdOe67tPbAEtLf0kisT0q0PNAPP4ffNdD2DSK
      xaJnFO50G8C2bUqlkjehE4kE5XKZrq4ub/X3qz+VSoVarUYymWxa9fP5PKqqEovFME2TSqWC
      LMu4rks6ncZ1XfL5hkdOGLeSJBGJRLx/W5aFJEnYto2maZ7dEI1GqVQqnioWjUabbYBiceuE
      RvX6MUxz9/DP2/buIW0yDKPJU7KTISa/0LEVRSGZTOK6LpVKxVuBI5GIZxPAepBLQBSymKZJ
      rVZD13UvB8hxHCKRiOfnVxSFYrHopTzouk4sFvOeVa/XmwJitm1jWRaxWMwbQ5MAPO5lTz38
      FkdNUFie5eDx06TiOjC8a36kEM8Ofq+OiNgGJ79IXRZRW9M0vbz9Wq1GIpFAURQvn1+s5kFE
      IhFkWUZVVVRV9QRP7JBC7fELGjTUsnQ6TbVaRVVVJEnamhcoHk+gxGKUV3XKlSpxXfUMixDb
      j814RHYKYrEYtm17npZCoUA6naZWqzV5YOr1OoZhNLkoxSoeiUS89AiR6iyu8wexYP3dxGIx
      z6Atl8skk8kmvV8U2Ni27WWbaprmnbMlAVhdXSHV1YuqR4hFoyiKgqIoHf22uxFO3aBeXm35
      mZroRlafjy4e9JPvdIj5YNs2iUTC89UL74+YzLVazVuF/RDniiS3SCSC4ziUSiVPeMSuAXif
      C4ggGDSCZMFUCFFAk3nESQRbFIBjJ08DMDj4Yrf/cesmZn6+5WeKnoTnJAC7FUIQhF0gIrD+
      iKwoWPdHehVFIZ/Pk8lkPIPZb/AKtUnYBJZleSpSsMagVGrNZipJEpZlecL3Yi3dIXYUksmk
      t2qLvBwx+aEx4YV6FI1GkWXZK4gRiEajnldHTF4BsVsE7QS/d6iVk9MfRAsFIMQzhTBUhUtT
      qCyZTMYraPcjmCKt63qT+zeZTDblA6mq6qldQJPKZdu2FxX2xwFCAQixbRBOEJF2kEgkWtou
      YqKKVT7oodkMhOoSiUSaYgqZTMbzGolCG7FjiBiBOCbG4Y3ryb52CKu00tZQjg0ce86j+e5Q
      qVSaoreWZRGNRj39Ph6Pe8Urwbz9rcB1Xc91Kaq+RFxATGyBVgHDdo6aPSkApcmvWh7XMoNo
      maFN3cO1TWzjadpOvBiIRCJe5qfQuWu19cyAxyXAdYLrup6xbJqmt3OI1Aeh3siy3KQqiRyk
      oLrTCntSAEJsH0RQyg8/W5soTGmXxiGS1oR9kEqlvPsJ6hNxT5FaITJNAS/2IO5fr9cplUqe
      rZHNZjEMw4s4ixgENHaKUABCPBX8qz2s8+34IeoDWgmBEADHcTw7Qlwv/P1CvRIpE8EAoagv
      EFmeIjKcTqc3JNwJm0WSJAzDCAUgxNNB6P9i4vtdkCJIKjw2YuWVZdmrFLMsi2q16rlEha4u
      VB6hBgl1phWVSjQa9QJsQoCEneA/3zRNotGoR5QFoQr0ncPMz7U8rug7n3k7SE7rJ6EV5FR+
      MqtarYZhGCSTSSqVikddKIJYwmCGRiBLMDwAXtqzqAm2bdvbOcTO4N8xdF1vSo8W44KGQSzi
      B5sXANvg7v1xNE2nUCzz0tnTbLLsds+iunC/paGs6EnPU9Qu4qxlBkHe2ULg9/74g07C3SmM
      YwGhLokc/0ql4lVmBSO58Xjci+aKnUWwxYmAmCi1FPDbBmLXEOqOGKOiKF6t8NYEQImQTMSo
      WnBsKEPecMlGnBcqGU5kIXZKQrMdB/cx5wR11yD8lVKdxuKws5Ph/NTjAmKCiYkXpC/3J6gJ
      dUec538nIkgmskn9gSxxH38atbAlBDz2Z9/uJPKJ/DvDpgXAMUqsFKqMDPQwvlLgpX4JiRcr
      GU6k2Nr19kloiiyjqCpOh0Q1jwWhDbtx0G/dbiw7ORmuFTMbNL67LMtUq9UNKpLICfLvGiJL
      UwTT/HlDYnUXyXCAx+/fifZc/FvsKP5MUv8uAVsQAFlPc/blRiCjp/fFaZIW4skgjE/BwuBX
      f8RntVptw4QPUhYK2hLxb2GoCggOINd1vUIWQY0o6grEvf1p16ZpelVlncgFXoyle49CJJqJ
      RLLvAqJRRb1eJx6PezubmMSiCivIyQPNq3UrDiCBZDLpJb4JYi1JkiiXy54AyLLsjUMkxwkD
      vN19XdfdOQJwY2yR//6fv9fys3/y+29z5nBISyggisTFZBBlfiI14Hn3EmtFWyiqvKA5MBa0
      GYT71O/tCUKkV7f63M/8JqrJRHJcsIgmuEs8VwH4gz9qPbnfvnCIdy4eel7D2PWoVqse84KA
      0KM1TaNarXrFKIIvfzshOrj4V/NWK6ywD8T5QjUSVOV+w9YvIMJzFIvFPG+PP3EuGAsQxFvi
      MxE5bgVFUUgkEp4HSJbl5ycAN8cXWx4/Ha7sm4II6vj96gIiqin0XX+gJxKJeCu0SCZ7Egif
      u+M4VKtVj6FBPL/VmBKJhDduMekjkYhniAbz9sX/q9Uqpmm2ZIkLdoY0DANN07y061QqhWma
      WJblCZ8437Zt8vm8Fznemhs0xHcKQSkIrSec2NaDK3O9Xve4MsVKKoJOrfLxW6FSqWAYhufe
      FJNL9N8SjG5+t6O4Lp/Pe7uQcHWqqrrBGBbj8jfHKBQKdHd3e98P8OqIxfcTMQcBkZskyiVF
      GrRlWV73GMMwvCDbtgjAP//LLxmfW9tw/NBQF7//Wxe24xEhHiGoT/tXOL8Q+I/7yanE32Jy
      plIpT+UQELuIruuUSiUv/95fZiiS3MQkKxaL3qovDNNoNEq5XG5Sw/wc/34Id7pQjfz0JoBn
      70SjUc/Y9dcY67ruPUfYDIIlTtQgaJpGpVLx0iHacoOujN9nrmRw+/5Dfvt3fotoq5N8GJ9b
      a6vihNheBI1JvxAEV+DgJAsGpGq1mjchYZ3ZQXRpEbxEIg1BXCfLchP9uFhloVHDG4vFPBep
      yMYUapqYtP4dQwigUOFElDiTyXgRYj+toSi1FA3wYL0STNQHiGOwzljnum4T2bBpmq0FINmd
      YX78Nul0ivZMjSGeJ4IejeBnQgja5eYEdws/JEny9G4xqcUqbJqmFzkN3leoJcHnCyES1Cfi
      Xn77RExOXdc9g1mQYsF6QE0wuQl9XgiIP9IsUC6XPTsA8NQdIXD+GIHwlrUUgLplYddrnL7w
      g51DHrrH0Wk1Dx7zsy2IyelPIRDnBu8haEPEpK1Wq21TPvyTL/h/0aFdsDYI3V+oNUJFEcUt
      QlgURSEWi3mRYbFii+S6crns6feKojTlGgnjWDxPxAn84/ITd3k2RasvV8wVUaIKn/38E377
      d39MBMCxGJ+cZ7Qvxb2pFU6ePMLz9TbDn7x7kz9992bLz/6//+k/AuDdq+Msrm10hfV3JXa1
      u7WTx6XTOeJHFyqH32BstZsIwfCvusEcm+Az/clm0JwLJe4lVnqRwuAfaywW8wRGVVXPrSvO
      E+qa4zje535XsPjcdV1PeIW6Ja5XVdULzj02DqBFVcYfzHH8iK+2VY4Q01XKxTIONo7jgus0
      BRxa/SCbSfpqGDTtw9WOYz82SU08592rY3zzcGnD5y8f7ONHr+zb5Fh2XjJcq0CSfzIG82yC
      eNzE99/Hr9L4n+XPt2knkOK7+QVD6PoiQivcuaLEUZBZSZLkGdOxWMzL5hQGsjDERevU4C7k
      F8RgWab4bf1F8W0LYjKD+7h0eon7k8vrB22DmdlZhoeHUSwDy5GIq4oX4GiFzSZ9NfS99vuJ
      LCueTtgO/szCpx3LTk2GC7oOW62+7dButQ/+O7h7BG2HoD0RvF74+f2/h6AtDKJSqbR8D67r
      bgj2QWPC+ptfiPv730O7WIlQ6fw8tm0DYcWVBZZLBgN9vesHFZ2LFy8CMDS0ucLxENsHkQUJ
      G705rTw/nY4/DiKC60+raDfhg4hGox5fp5+1ISiwsJ7WIHT+4H2DvKB+N26ncQiPT1Cgg1Qs
      kUiktQB0De7nTN2hUFfZPcTnLzZEEMfvdgyuxO28QEBLYWilxnmUgb52Q+Ia/27jv7cYm6jw
      qlQqaJrmpSYEyx2F+iLGGExbFn/7n+cXolbfKXgsqA6K+MGG77vhyCPYdp3p8YeYhsnLJw63
      Oy3Ec4LgxfQXfrRybwYnSCdVqZ2K1W4XCd5beG38xFOSJHm7gEhTEJ8Jt6pf8Fqt1MFxigqu
      4BhaCYM4JpimhcuzXeulNoqsxccffkY5X+FIOPl3BATbgV/39SOop0Oz+08IwmZUIP+1wbpa
      PxzHoVarefn5/rEIPV1kZ0qSxNraGpZlkU6nN11EJajMgwLcavUPqjh+m6Ed2ozC5eDBg9Rc
      5bm7OkO0RisdGprVmWDxiTgevI//c3FMCJD/HmL1Du4grrvec1fo5ZqmedFaf9KVGxMAACAA
      SURBVHML/+SLx+NUKhWvHao/naEd/E33/ONv54US49B1nWKx2Eh3aCNslmW13gHyM3McvfQa
      h0f62ZVdtF9QdJoom4kPwLpLstW1rVZXv77uv5ffKBcUJEIwarWaF/Ty/ydoEyVJ8igVH+e9
      6vRdg9daluVFmoXQlkolrwGHH8Iz1VI0oskYH3/6Ca4rMXwkVIF2AmKxGIqitFVJgpMiV2q4
      ArNJvaUuH/y3Pz3Bfx9hDAfdmkKtEUEnf24Q0OTb96dICO+SiMYG40hBF7E4V1VVCoVC2+/h
      v4foHi++kyjCz2QyTRFxx3FaC4Ce6eedt/qxarVwB9ghEPptKzUoeCxXMvjHf/QRAP/s939A
      dyrqndfuHkF/uv+5IklNuERbBdxEsEncx79ztNtxdF0nHo97AgR42aWu63oqmF+Vikaj3nH/
      YiDsBElqRJ2DPYRFa1ThnRLFMW2tg+W5ST756GMW10IC2J2CVupLUCcOYrPuw073ELuA/zz/
      hOvkYQraIMJlalmWx+Pp916JYhVhvAZtmVqtRqFQaKJkEbtGNpulq6vLu7cYQyqV8jxJfnui
      Y0XY1OQ05arF2P27DF262O60EM8JhUJhA88NtA5QZZM6/+z3fwhAV0JrqSb4dfNWOn4wbiBU
      Fn/kv1McQpQ0BiPAQvcWRnSrvB5oTM5MJkOhUGiqAw4KvPi/n4E6EomQyWQoFotenUAsFmsq
      ABI7TtsdYGhokHg6zeVXRUGLSy63huvUmZ5pzWYW4tmh1cQHNvjUxX/dKZ1sUmv6rBU67Qz+
      nUOoEa2u9+8CYtUtl8seLUqwFDMajdLd3e3VLneKWItn+nv7+ncc/44RRCqV8uqkhf0gro3F
      Yo3M05ZvBXCBiKqAGJxTZzWXp1rKE3Ft1kyXlLLzkuG2Zyw7LxkueD08Pv9HnNPOhdrq806T
      0R+EaxW1bZfqkEgkkKRG61RBo1KtVjfQFvrv5TgOa2vrVYaiVkGMQ5wfpEdsBVE4L+4rjPpC
      odB6B8jNjPHZ9TuMP5xeP8F1WFyYpWKYzC6toSuSZ0y0+yGEbtYp6LGdyXCdir63Mhalw3MU
      b7zPfiydntHq3kHB8KsnQVUleN3jhMl13Q3NMIL38ifP+e8nWqJ2dXWRSqUolUpYlkUymWxq
      atFJHRNGrP/eggnjcchms14ahLAPxPNa/gLZ4UOcLVUYm1zBgUYwTNF5/fXXH/uwEM8WQXel
      QDv3YLD0sJUB63dttoNQN3Rd97wprSZrUOB0XW8iwPWv/KL08nHft9VYXNdtaordCf5zNE3z
      CuclqV2neEni8InTHD7x2HuHeM5oFe2F5okiSLJEWrLI1Wnn/28nVK12CsHT72907dfN/a5Q
      ESEWKp/g4wm6Stu5S8Uxf66RQDu9/3HwC3zbOECInQe/nu2fsP6VXkw4QUcIeKu28LgEyWFr
      tRr1ep1kMtlSXQr+DesdHyVJ8nLvxTn+YJjrNjq2CLoT/7hbCZ3/Oclk0svlicViTQ2xxfd8
      GghBDgVgl0C4If05P349XBSWx2KxJh4gsToLt6QoFQS8bu7+FGaxWou/BYIuT//fgosf1lnq
      xDjL5bK3I4nPYV01A5qo0sW9hXNFjDEouE/KeOcff9t6gBA7D34DNGh4isQysdJLUiMl2e8b
      F9f4PSaxWMwzSnO5HNBwX7qu6+Xs+CEmZJCdDZq9ScI5MjMzg6ZpRKNR5ubmGBwcZHJykn37
      9rGwsMDo6Cjz8/MUCgUGBgawLIuBgQFPCAVli6gFfhwd42Ygdh7XfdR66YnuEuK5Q/zg/pRf
      oXMXCoUmmvFMJrOhNWm7CSPLMqlUiv7+fgqFAslkku7ubnK5XEuvUquqtFZ/S1KjLndgYMBT
      Y6anp9E0jbm5OXRdZ2xszGOVtm2b5eXlhmfm0WQPCjo0xwceZ0C3ghBUEUkOBWCXQJYbjaZT
      qRTJZJKurq4NaoMsy03qyGYhIrcjIyMeLUl3dzf5fL6j+1QgmGohcPDgQR48eEC5XMayLPr6
      +ujv7/fIsvr6+nBd19Pxs9kskiR5cQMxNnF/v/+/WCx6CXdb/a6SJHkqVKgC7RKI2AGsqzG2
      bZNIJDAMw6MWeZpuPfF4nHK57AmRrutNmaBiHH60CoL5jeXDhxvZxJlMxvssGo16xLddXV2e
      WiJSLQBPBevE8e9netgqNE1r9CTe8pUhdgRES9B6vd4UXHpaiICRyMUJkkv5XaewsSzTf65A
      q3/7jwmB8Ae8RMIcNAzedLrRnSgYjRZVcp26wAQhnh8awbsUlmVRLpc96nOxqoq8+aeBv+OL
      yKj0sykLtFrxW6VD+D8X1/tpTWC9faofIk6gKAqpVIparbYhhiG8V+KZiqKQTCY7eoiCEect
      7wCOVePu3QdsXt5CbCdESaGu640t/JGxuB2TX0B4kzRNo7e3F8uymvJyhL3hR6fgXLAhRhBB
      gZFl2SPIcl2XQqGwQUCCuUOCwDefzz92N6hUKt6YtvzG1uZmsfUosutit6jo8WOzSV9hMlzr
      sfiT4QzD8CZBOp32UhG8nJZt7NQp6MRLpRKu65JOp8nn803jbxeFbgURF/BHisV3DOYNQSN3
      yB88CyIYjxDxEUGLmM/n0XXdY5cLQqRI1+v1rQtANNuNcesOxZER0pGQGa7TWLaTGU7o+uL+
      frXjSX3inSDGaBhGW3Isf16R8NKI48H7+NslBccuBEF0lBFFK/6odzDw5x+DiBn434MofhHv
      SvCS+lMrSqXS1gUgnuri/JXXtnpZiKdEIpFoKot8HhArpaqqHjltUAgE/Dk2/okqAk7inOA1
      sO7j9/cWFvCnfPiNX3E82EPMf63IhxLXCiERkWV4AhsgxHePZ7Hit4JokgENARRR5mB2adAz
      5P/bryq22iH8//bvIsHgmr8IXxj/YuX330eMq9UYBUSah6IooQCEaA8/70+rcsxWELuF/x4C
      rXaPoDojniOS6tLpNIlEgkwm08Qz6i+QaXW/Vv/320tCLQoFIERbyPJ68+loNNpUvCIQ1Ocl
      SfJoHP3n+lfnToLkX61FTpHw2IgMUMMwWnIKtbuvsDOE90ecV61WQwEI0RmC4EqkS0Sj0aY2
      Su38/iIto9NkDwpD0KA3TZNareaxw/k9X0HS3mBMopVKJlKghfrjOE4oACEeD7HyCrVB/C3Q
      yjMkCnGCPcFa2QvB+/l1d8uyiMfjHjdRu9auQQHz2wD+BDh/P2VJkkIBCLE1+BPJHneeWHGD
      3P9B47RVfpFQVUQlmaqqXs1CJ4j7+Q1uv3CUy+Um1rpQAEJsCf4OjcG2S60MXBHP8Fd0+Vf9
      IHN1q+CYcHW6boOGsV1U2XEcdH2dCrKTISywZQEIeYH2NiKRCOl02ptIfpWkXbDKv2MEJ7df
      GPzXB3eFfD7vtT9SFGVDvQM0VDV/aWerZwaFYcuBsLmZGSKuTd6ETNhEeE9CVVUvU1To0616
      evkndzBtuR0LhX8HCJ4jyihFtqj/GYCnLvnLR4OqlrivGNeWBUCLKEzNrHByZKtXhniRILI0
      Z2dnqVQqDAwMYFoWU0sl9vUlkSXJc4X60xT86kmrnUCoO+KctXLjHtmk7nV7SSQS5HI5j4q9
      q6vLoz+sVqtks1ls2/byl4LqkH9H2LIA9A6O0js4+qTvLcQLBEmSyGQyRKNRbNvmj9+7y7tf
      TfLO+f38p++c9Axm/0ouJt7DhSLj83neODOCqshNqo/4e61seizX//M//CFJvaGxizJOgK6u
      Lq8cVFCgr66uous6XV1dG7iHgu5byfXtIcViccsvoVKptNTHQjw9DMOgt7fX+/txFIDfBUzT
      9Ih7/9W7d5oEQKzmhmF4yYwia/O/+V/fo1S1+M/+zku8fW59QfUbvEEByMQfdXiXZD68McOh
      wQyHhzIkk8mmAnpFUajVapRKJaLRqGc4+12rnjvXDVoMW0SxWGzqvRpi++B/tztVABzHYXFx
      sTEBgamlEvv7UkgSXpNrSZKa9HaAP/p3N7nxcJl/9LsXOTiQ8jxGogRT7AKi0UdXonGtZVl8
      fGuBf/nvb5OMRfhf/ss3Gjk9jwJvoiO8KLpZXFwkmUw2eayEfRDyAoV4avjTizVNY39fknp9
      vTTTr9P7uYD+i9884x3zB8qEm1XcO1+q0pOKNtVYHB/JcunEAKN9qXUj2KmjqTK1R3ZHJpNB
      13UGBga8arJMJoNpml7r1ieqB9gLsGtFqovftvws1n8UJRrueAIioqppGmslg8/uznPlxCBd
      Sd1bafNlk8/uznPxSC/d6ZinErUyiIUvH+BX9xb53/7N14z0JPkn/+B7Xu7/aF+S/+q3XwEe
      sUZLLkpxGoBYah+q1qhoE70FhHEM66x2HtfQZr+oWze4e+c2KyurfHPn27B1Ugig2Q35x+/d
      4U/fv8sfv38HWHdbiuP/+qNvvTwckSoRiUTQdd0r6RSu0sZ9m5PuWnmNZFnGCZRAimQ813FQ
      qXvXiu4ygr1O1/XN7wCSqqMrNg9nlzk1EGOl5pKNOB4zwW6CtTLe8rgcz6LEujZVEvk88CTE
      T88b/t/+1IEebowvc2p/D7AeCfYfF6uvwPvXpvmzD+7ye2+e4K1Xmr2Lrx4f4J/+g++TfbSb
      iOf5XZmu61I1beTUPgAc5HXPk5lDMvJYVom6nPIS4SRJamSCdmqRtOGLGhVMR6UrJnN/vsBL
      fRKKpHjSvJtQM1r3PVOiyU2XRFqlFerl1ZbnxAaObcs4n4T9+HnDT5P41iujvH1u34bUhuBx
      AUmSuD2xgmHZ3J5c4a1XRr0aBGgIUH9mnQNJBLAikQj3Z/L89ItxfuPSIQ4PJqnUzKYy0mCQ
      rVKpeKRfpVLJK/zf9MxV9TjHT5x8urf1AsG1Tew2grSX4J+w0Ny9xZ835O9TIFqlAvwnb5/k
      yEiWyycanKATExMcPXqUsbExuru7+dOPJrjxcJn/+rdOs683zurqKgMDA/z0i3G+frAEwH/7
      k/NN93Qcp8GTJCeRdZ2q6aDrEY8OMRKJUDXrrJXM0Aj+rmHXWsdeJHV35JkEO934yxT9efiW
      ZaHrOslkkpWVFS85LqHLvH12yLtWGLqyLLOwsMCNh8uUqhazuRoH+pOUy2VmZ2f53oluAH7j
      0iHPdSoS65aXlxv6vRrBsiCVVBqp2XXHc8f+4b/8hJmVJyiKD7F5VBfut9wlFD3pqUntvE1a
      ZhDk5DMd33agEwePiAT7qdFLpZJXkytcpP78n0wmw9jYGPv27aNYLPLf/YdDPJhd48y+OI7j
      oGka/f39WDMz/OdvHiSZbDBJpGIR5OIERBIoWtr7W9azKMUpHEBK7fOo3wVCAQjxVNA0zUuE
      C8ZUI04FqbSMG+/ForEr/MUvvuVvr07wj373IqM9MW+HuDe95un0qUcF+Ol0mowkMdI96EWR
      R0dHqdfrHD16tDm/yDHBdcAqI6vR9b9jPd54qkad5VKdAcXgD37vHIXl6bAeIMTTQRS9wHp+
      v9D7JasKuEhW1VvhpxeLlKoW4/PrRSmAp9P/9Itxuru7WV1d5eHDh1iWRUwyiFamickmKysr
      lEolpqamkO0amrFMXJOo1FXceB9OYoiaq+PG+yA5iOvUqSdHqSdH+R//ry/4H/7Fp1x/uEY6
      JrOvewtu0BAh2iGZTHqZl5oqI9fLOCjY0W5kNYqjxnHNhqH8914/wsn9PbxxZhjXWWcV/I1L
      hwD49VcPMjk5SSqVore3l2q1SpcCQpAMwyCRSJBKpVDrpcYqDyBnMIhiWzaWZUI0SrSygGyb
      SIkBytb6Wi/Xy0jlR4Gx5/WSQry4EIS6hmGg1FbAKqFEDKpqF7Icx9/ueKQ3wUhvo0G233o4
      PtrF8dHzrK2tkXcaev7c3BzRaBQzkiGiRnEjCeLxRhCrWq3iZPuQAVfPECHikXdFo9GGYe7R
      iTYyRf/x712gULU5kFWgsgCKFgpAiO2B6E/gRmJIVrnxf6Sm7M5gn69gANV1XRKJBJqmUavV
      6O7ubhjLtost68hGlZ6eHi9domqBpHThWi6ua667Ql0XpV6CeC+2K1OqNjiEFGB/bwwkGTs5
      St15goqwZ4WFXJn3vmwdoX37wiEGsonnPKIQW4EkNSjaazWQ0wcbnp1HJFSWZWHbttf0Qhi0
      sN7yyZ8M5z8uBChirSEZeVw9gxXpAiCqqcj1Ck4kTqXWoE1RVRXNrSJVlkCScVMHUJSGqhWP
      aijFKQDs1D5cdpAALObK/Om7N1t+dvpQfygAuwB++hIBQZEiXJ2qU0UuLeHGe6lLDXekIoNS
      ngHATgyzmTYfkiSh1FYfqVtJXLcxP0zTRNUiKJIMkYSnFimKglyv0MgvWi++2TECEOLFgGB4
      NgyjqfbWI7Jy6nieIbWR5iC5NtiPCHTdZrVIURQMw6AuJ5A1DWQdWzTbVhvqlq3o6Irunesq
      Om7X4UbQS/ADOSZSeRkAJzGIZbtkMpntEYCx2Rzl2ka5TUQjHB7ObscjQuwSiKxOER8QHeoF
      bDWBEpNx1DiO2SiYsVGREoONz1EB09sxRK+yRlT5UWM7wT8a0ZDjo41eaVYOKmXkxBBybRms
      MpH4ILJTQ6osQ6wblEdVYJEYPan09u0A/8dffcXN8cUNx08f6uef/sO3AfiDP3qv5bVvXzjE
      OxcPbccwQuwQiImraRqrq42EQcMwvMYethxHcptTm00e0R4G2KElSUKhjiMp2M76/UVePzxi
      riuVwXWQHROs9b+leg1woW5gRAfRdZ1EPP7kRfFPilYCAnD6cP/zGkKI5whBkpvNZr0WqOVy
      2YsXiJJF27Y9r09XV5d3LTQEQ3WqSOUFZEWDxIinVsmyjOs46JKB40Rwk8NgG1hSDDUxhOSY
      VJ0IejTuxSIkt7kFK4RxgBDPGNFo1EuEi8fjTVQlIkPUdV3i8Ti5XI6enp6W3J/QTLylKAoR
      u4xUWUaRZMzEPuqOBtjU6nUUpZFjVHPruG4Et256nSj9CAUgxDOFpmkoiuIJgWiXBOtCIFSm
      bDZLPp8nk8mQy+U8Ai4lNYorKTi207Q7OIrmeXskSSKZTHr2gizLlMtljy5FlG7665KhjQCU
      l+eYz5W583Cav/trb4ZSEmLL8K/W6XSaUqlEsVhs2AC+xop+unNZlolEIiwvL9PT04NpmpRK
      JRKJBLjr50YiEY8tw0pmG6qSj/5cwDvHsqjlF2B1iorRR6J7uLMNUDeq3BmboF4z2ElFeTfG
      FtvaEv/xO6ef82hCdEJQ1YjFYhSLRa+fsd875F+R4/F4Y8LTUJ9yuRzxeNwTklQq1ZTO/Di2
      aHF/kZiHWWnqSN9SAFRdR3YNLn7vDbzb2wZ374+jaTqFYpmXzp4m8nxaVXm4Ob7YNlgWCsDO
      hSzLXgM8wzBIpVIUi0WPOlHAT23urw8QapGu65ua8EEoioKU7MepRZH0lDf525LjFnNFInGN
      zz/8BQO/++NGJrcSIZmIUbXg2FCGvLFeFN+OW0tU93TCdvcJfu/LcRZz5Q2f92cTvH2hs7t1
      J/cJ3u0QOT6CUDeZTDZ1a4SNXSP9XV1E798nhR5LULBsJLvxm4h521IAtKjK+IM5jh9ZL+52
      jBIrhSojAz2MrxR4qV9CYuf1Cf75tam2MYkfX+5crL6T+wS/CBAUKLVazaNE8fcNgI006a7r
      kkqlvB5fyeSTVcmpqkosFvNUL/FuW/4KmcF9XDq9xP3JZe+YrKc5+3IagJ7evicaRIi9iaD7
      slqteo33FEXxOGlbsUb4BUPECZ50DJqmeQl5os9AyyWmuLLAcslgoK/3iR8YIoSAX0PQNM3r
      LSDSl9PptEdcJdjkRKTX7yF6mh1R1CcLoRK2RMsdoGtwP2fqDoW6SqTVCSFCPAUURWlSZVRV
      JZFIsLKywurqKoVCgf7+fq+hXSrV4ADNZDId79uq35jjOJ4BLko1BT+QqqrtXfy2XWd6/CGm
      YfLyicNP+ZVDbBdc1/X49s1aBau8SiTRjR7bXeniQRtI0zR6enqwbdsrhMlms14QS5BsPW4X
      sG27qam3qCcQqRf1ep1yueEkiUaj7QVAlmVWl/N8761w8u8kCAO6Xq9jrc2CVcKyaqja4U11
      b9zJ0HUdwzCIxWJAc0dK4UJt5zyo1WreSu+6rtc1xt/cW/CBxuNxqtVq50bZxXwOJCUkwd2h
      UBQFtDgggRbf9R4jkbLQqV1FrVbzvEZBiH7EgNcfIHh/WPc2xWIx4vF4awGwLZO6K3Pq7Gl2
      Bz/Z3oMkScSzQ0QGTqHEu9u6onci2k3yZDLZNtAlvl+5XN7Q8siyLE94RKpEq/fhJ9UVJZwt
      9xPLqDJ1Z5zUySgOT9BLNcRzgSgW2Q3o1AJVQDTeq1arXkVZ8Fzbtsnlcui67qVTCy5QoSa1
      M5b99xIsdS3ntlM3UTJJarl8qAKF2BZsZYeKxWJ0dXU1tTYKxghM0/Si9isrK55XaXh4uMkW
      arfbKIpCOp1uvQPEu/p458c/pri0/AIF40PsNui6jq7r1Ot1arUahmF4/KCi/hcaEebV1VWv
      FNNPze73CAXRsSRy4tvbfDs5x4GjJzm6f/jZfMMQITYBVVVJJpMkEgmvuws0Jv7MzIwXSDMM
      g8XFRS+b1K/vt4sit1XvjZqJUbGoVTcmloUI8V0gmEOl6zr9/f2ej39packzkC3LYmlpidXV
      Va+JRyu03QHSmTTZ3jonTmxPt5MQIZ4FhO5vGAbJZJJKpUKhUMBxHLq7u5FlmVgstiGvSKCt
      ALiui13fDEVRiBDfPYQ3LB6Pk0wmva6QwfSIoD3QUgXKzYzx2fU7jD8M+dND7D5Eo1HPgyS6
      x0BrT1TL+Z0dPsTZY/sZGugLvUAhnhk6RX2fFpFIxGOoK5Xa93JrrQJJEodPnObwiWc1vBAh
      thYbeBKk02mvFlkU2juOQ61W8/KEtqDhuORya7hOnemZ+Wc36hAhtgmRSIR4PI6qqhiGQT6f
      p1AoeJVoCwsLW2A8ceqs5vJUS3kirs2a6ZJSdl5N8PaMJawJfpHQ3d3oKGkYBpZleflG09Nb
      sXFdh8WFWSqGyezSGrrSSFXdTE1wp/rX7awJVlV1W8aidHiO4o332Y9lt2d47hT4k98EV5Cm
      aezfv38LO4Ci8/rrrz+rMYYIsW1oVRnWCrIsh17O3YZn6Tl5UbAV4zoUgF0Gf0QzxNYQfG+u
      64YCsBuxm4pfdhL8701kl4YCsIvRyRO1VxCsE9jsNSJxLhSAXYzQS7Sx1vdxEBVlsiyzvLwc
      Mp/vNmzWw7GXUK1W0TRtU65jwUUajUY706KE2JkIJ/9G6Lq+6d1QZIl6RLzPbFQhQjwniGDs
      4xYH13U9ukUgNIJD7C0I7iGAtbW10A36oiCMC2wOtVqNxcXFzVEjhtgdCI3izUNVVQYGBjAM
      w2u7FArALkc4+TcPkewI6/GDUAUKsWcgmuwJ4ixJkkIB2OvYa/aD6CccukF3ObZr4j5JKsFu
      h6IoHoHulgWgmFvi2rWbWHvrne0IBPtnbQf83Jt7CaIHwZYFIF82Gm1SzcefG2J7sZlJ/yQr
      +maCSC8aBI/olgVgoCfDeM6kZ3ewcu857MXJ/KSIxWLNblDRrvJx2D/cT+nRuZVKhUvHejnQ
      19hS/H7p/q4EhUIBSZL4zcsHvOv95xzojVEoFIipTttzYqpDoVDgQG/MOyfo/y4Wi7iu23Es
      4vuZcqLlc+qmS61QwLVN6o/OCT7HrhpIpotjuthtznEfjaXuRHBbnCM5EaxH76XTWOqS4dWw
      hth+KIqC5D6l8lcsFjv+SKKhWyc8z3Meh+c1ls3cw/9uDcN4qmYYrXgxwyDaM/ACLc7PMDUz
      7zXW2PAj16vcfzBBqVLzDgXPWVtZZGZuDrPutDynWi4wv7jE+MPJpuuaGyM4zE2O8XBmY9d4
      AbNaZnpqitX8OgN2cCyLc7PMzS82EZQEz7nx2af86ps7bccCdcbuP6BQqrS9R61S5M6du1SM
      7eVj7WQT7PXJD89AAFzXJaG5rJXb/JCuTblcwe5QzWTVqhhmHadtdw+VhdlpIrF423tMT4xR
      La2xVm3/HEmScJCpm9W251RrFeqW1bFTTt9gP5lkJ1XFfdQYut1YLL69P87K8soT72Bikrea
      8MFVP/jfXsa2C8Dc3DxEEmQT7VpsS6zlcywvr7a9h1l3WJq8zUKxNXmU6zj09PaxtrLS9h7R
      RIZkdoBstL0AlJdmKTkS6Uzr5gkAegTu3h7rSFF1/+Y9Skalwxku0zNLLC/MtflcZmB4mKG+
      DKXK07nXRNG8+K9dX67g8b0qCNsuANGIzNTsQocnyvRksyQSsbanDA4P0TtynNFsa53XcRxM
      0+xYBFGrlChULSSnPQNboreflYn7FCtG23O0WJr+3jSdlIWRowcZ6u7tcIbGuXPH6B8aafO5
      w8LkOImeXqpPKAD+Cd7Ot+/3EPl3DPHZXhSCbReAxuRvT3OIbeCgkC+08Tg5db768hqymWNq
      tdbylFgyzeHDh3npZPvmHZl0mqimYFjt1+7CwiKyBoVSeyFZWVpBVeRO3whFVTpSHa6tzjA5
      tcLk5ESbM2S6B4aoFfNEtM4q0GbVFkmS2i4QQVepf7fYa0Kw7QJw+vTLDPb1d3iixvTEPdby
      bSirZZWXThxiZrFIV1s16vGw7TqmaaF0oB9M9Q8wMnyIob72tkRMc7n7YIJiu/ECpYpBbqm9
      sd3VPYTkVkmnW7fvBLBMk3rdQX2MDSAm73bo73416HEtTF9UbHs69NLSCqMH2+vUOBbZ/v0M
      9LY/p2LUUSQbq+4AT2YUZnsHyHbSSoBqbomaG0Xu8KNLepyhnh7SmWTLzw3DZHR0iGK1E9mt
      jVGrY9vt9hGFA4cPdx7sI7RyZz4N2rUO2ivY9h1AVRXq9fYKw1KuzP6hLqLR9qtuKp0hle5C
      V57tDyKpGjh1HKf1SmoZFVxXpXuor60YuvUaE5OzaHq0w5Nk9u0bRFZbo3ySnQAAAZhJREFU
      d0Hf0ph9O8B2oBVb2l5Sg7Z9BxBV9+3QN9Boubq2ttb2HLNawpFVnvWC5Lo2tWp7ozOixxkd
      jVNaW2vrBnVc6B/oR+44VpdqzSDRSUa2iE6r9VYCXK28Q3tJALZ9B7Ccxsr5OLTr2woOdUcG
      VyauP9uCNTUSQ6HCWr6z0Ca7utquFPFkmmI+1/H6crmCJMlkup5PWkM7T8/T4EUVim0XgGw6
      if00tzUKfHPrLpmEytRqe/fkdiASjeJaDvHkky/NpXyOmlmnUmkvRBNjYziqzsLszBM/50nw
      pIZtq/PbxQt2u2Bs6xI7OTWFpmlUKo/fAdpC7+L7P/w+uC48U+o/k4WVVWQHSoUqXYkn08/1
      qE6pWCIab20kA5w6/QqSBLuZylOoVe0CarsV2zrDdAVkVUPvaBA+HpIkIclyx+DT00OlVqmS
      SMVJpNsH5R6HiB7n8MF9VCqtYxYgJomE3NlQ2NF4HhP9eewmQSN/W3eAgeF923m7ZwyZYydP
      bcudXMcmlkg8/sQdgJ2UAfq4JtbPAsFn/P9lTuI3G1egAgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='US states and preferences' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='countries and share of vehicle types' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='minivan mpg' width='192'>
      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
      pNMf6QnyruoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='119' name='pickup mpg' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='suv mpg' width='192'>
      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
    </thumbnail>
    <thumbnail height='179' name='wagon mpg' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
